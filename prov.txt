####################################################################################
# Scripts | script.txt | Just general things to run
####################################################################################
log = "===============================Running Prov.txt=========================================="

# Some common triggers
# tag
# is_core
# province_id


remove_country_modifier = jason_global_foreign_trade_power_cheat_100
# Template for adding modifierS
add_country_modifier = {
    name = economic_hegemon_benefits
    duration = -1
}




####################################################################################
# Continuous things to run for this campaign + Global Flags
####################################################################################

every_subject_country = {
    add_country_modifier = {
        name = jason_mod_more_GC
        duration = -1
    }
}
add_province_modifier = {
    name = local_autonomy_cheat
    duration = -1
}
every_subject_country = {
    add_province_modifier = {
        name = local_autonomy_cheat
        duration = -1
    }
}
every_subject_country = {
    add_tariff_value = 1000
}


####################################################################################
# Colonization
####################################################################################

ROOT = {  
    set_variable = {
        which = colonyCounter
        value = 0
    }
    while = {
        limit = {
            NOT = {
                num_of_colonies = 25
            }
            NOT = {
                # TODO add early exit for when no more eligible provinces
                check_variable = {
                    which = colonyCounter
                    value = 50
                }
            }
        }
        change_variable = {
            which = colonyCounter
            value = 1
        }
        # log = "Loop iteration [colonyCounter.GetValue]"
        random_province = {
            limit = {
                OR = {
                    is_island = yes
                    has_port = yes
                    is_neighbor_of = ROOT
                }
                is_empty = yes
                has_discovered = ROOT
            }
            log = "Creating colony in: [This.GetName]"
            create_colony = 1
            # add_colonysize = -200
            discover_country = ROOT
        }
    }
}

####################################################################################
# Changing Colors and Names | color.txt | This should be edited EACH CAMPAIGN
####################################################################################

# Names
ROOT = {
    ROOT = {
        override_country_name = AKSUMITE_EMPIRE_NAME
    }

    # Marches | X Dejazmach meaning militarized province
    BAL = {
        override_country_name = "Baluchistani Dejazmach"
    }
    TUN = {
        override_country_name = "Tunisian Dejazmach"
    }

    # Defensive Marches
    BEN = {
        override_country_name = "Fortress of Benin"
    }

    # Naval Marches
    CYP = {
        override_country_name = "Naval Base of Cyprus"
    }
    ORM = {
        override_country_name = "Gates of Hormuz"
    }
    SKA = {
        override_country_name = "Naval Base of Madagascar"
    }

    # Real Unions | Aksumite Negusate of X
    EGY = {
        override_country_name = "Aksumite Negusate of Egypt"
    }
    K08 = {
        override_country_name = "Aksumite Rasdom of Libya"
    }
    
    # Appanages | Royal Fiefdoms: Royal {fiefdom title} of X meaning royal kingdom or Royal Mangesta meaning a Kingdom level land grant for a Negusa of royal blood
    # Kingdoms: Royal Negusate - Large | Appanage
    # Duchies: Royal Mangesta - Medium or Small | Appanage
    KBO = {
        override_country_name = "Royal Mangesta of Kanem-Bornu"
    }
    
    # Fiefdoms | {fiefdom title} of X
    # Kingdoms: Negusates - Large | Brother Kingdom
    # Duchies: Rasdoms - Medium | Fief Subject
    # Counties: Awrajjas - Small | Fief Subject
    ROOT = {
        # Brother Kingdoms | Negusate of X, Negus Meaning Subject King, Negusate being a neologism for Kingdom
        K07 = {
            override_country_name = "Negusate of Mali"
        }
        POR = {
            override_country_name = "Kingdom of Portugal"
        }
        SON = {
            override_country_name = "Negusate of Songhai"
        }
        ALG = {
            override_country_name = "Negusate of Algeria"
        }
        MOR = {
            override_country_name = "Negusate of Morocco"
        }
        # Fief Subjects | Ras meaning Duke: Rasdom for duchies, Awrajja meaning province for counties. Large fiefdoms should be brother kingdoms: large Neusates
        ALH = {
            override_country_name = "Rasdom of Hajar"
            set_country_flag = rasdom_fiefdom
        }
        QAR = {
            override_country_name = "Rasdom of Qara Qoyunlu"
            set_country_flag = rasdom_fiefdom
        }
        FRS = {
            override_country_name = "Rasdom of Fars"
            set_country_flag = rasdom_fiefdom
        }
        KRW = {
            override_country_name = "Rasdom of The Lake"
            set_country_flag = rasdom_fiefdom
        }
        BON = {
            override_country_name = "Rasdom of Bonoman"
            set_country_flag = rasdom_fiefdom
        }
        K10 = {
            override_country_name = "Rasdom of Andalusia"
            set_country_flag = rasdom_fiefdom
        }
        # Counties: Awrajja - Small
        YAO = {
            override_country_name = "Awrajja of Yao"
        }
        K12 = {
            override_country_name = "Awrajja of the Balearics"
        }
        K11 = {
            override_country_name = "Awrajja of Sardinia"
        }
        TI1 = {
            override_country_name = "Awrajja of Khuttalan"
        }
        HM1 = {
            override_country_name = "Awrajja of Hamadan"
        }
        TAB = {
            override_country_name = "Awrajja of Mazandaran"
        }
        LR2 = {
            override_country_name = "Awrajja of Luristan"
        }
        ARD = {
            override_country_name = "Awrajja of Ardalan"
        }
        K02 = {
            override_country_name = "Awrajja of Basra"
        }
        KNG = {
            override_country_name = "Awrajja of Kong"
        }
        DGB = {
            override_country_name = "Awrajja of Dagbon"
        }
        GAL = {
            override_country_name = "Awrajja of Galicia"
        }
        PIO = {
            # European Fiefs get European titles
            override_country_name = "County of Piombino"
        }
    }

    # Tropical Resorts 
    DGL = {
        override_country_name = "Resort of the Maldives"
    }
    K03 = {
        override_country_name = "Resort of the Mauritius"
    }
    BLI = {
        override_country_name = "Resort of Bali"
    }

    # Mining Corporations
    ZIM = {
        override_country_name = "Mines of Great Zimbabwe"
    }
    K06 = {
        override_country_name = "Mines of Great Mali"
    }

    # Commercial Enterprises
    ZAN = {
        override_country_name = "Zanzibar Trade Company"
    }

    # Trade Outposts
    LFA = {
        override_country_name = "Lanfang Trade Outpost"
    }
    K01 = {
        override_country_name = "Sao Tome Trade Outpost"
    }
    K05 = {
        override_country_name = "West African Trade Outpost"
    }
    GEN = {
        override_country_name = "Genoa Trade Outpost"
    }
    WUU = {
        override_country_name = "Wu Dynasty Trade Outpost"
    }

    # Integrated Tribe Subjects | Shumate of X - Shum is a tribal chief
    AIR = {
        override_country_name = "Shumate of the Sahara"
    }

    # Native Reserves | Native Tribes
    BNY = {
        override_country_name = "Bunyoro Tribal Reserve"
    }
    KET = {
        override_country_name = "Ketu Tribal Reserve"
    }

    # Puppet States
    HSN = {
        override_country_name = "Ayyubid Sub-Caliphate"
    }

    # Pirate Brotherhoods
    KNI = {
        override_country_name = "Knights of Malta"
    }
}

# Colors
ROOT = {
    # every_subject_country = {
    #   restore_country_color = yes
    # } 
    # restore_country_color = yes

    change_country_color = {
        color = { 230 10 20 }
    }

    # Cycling colors for Dominions
    # ROOT = {
    #     C02 = {
    #         clr_country_flag = subject_color_1
    #         clr_country_flag = subject_color_2
    #         clr_country_flag = subject_color_3

    #         set_country_flag = subject_color_1
    #     }
    #     C05 = {
    #         clr_country_flag = subject_color_1
    #         clr_country_flag = subject_color_2
    #         clr_country_flag = subject_color_3

    #         set_country_flag = subject_color_2
    #     }
    #     C04 = {
    #         clr_country_flag = subject_color_1
    #         clr_country_flag = subject_color_2
    #         clr_country_flag = subject_color_3

    #         set_country_flag = subject_color_3
    #     }

    #     every_subject_country = {
    #         limit = {
    #             OR = {
    #                 is_subject_of_type = dominion
    #                 is_subject_of_type = dominion_tc
    #             }
    #             NOT = {
    #                 OR = {
    #                     has_country_flag = subject_color_1
    #                     has_country_flag = subject_color_2
    #                     has_country_flag = subject_color_3
    #                 }
    #             }
    #         }
    #         random_list = {
    #             33 = {
    #                 set_country_flag = subject_color_1
    #                 log = "Setting subject_color_1 to [This.GetName]"
    #             }
    #             33 = {
    #                 set_country_flag = subject_color_2
    #                 log = "Setting subject_color_2 to [This.GetName]"
    #             }
    #             33 = {
    #                 set_country_flag = subject_color_3
    #                 log = "Setting subject_color_3 to [This.GetName]"
    #             }
    #         }
    #     }

    #     # ================== Finished setting flags, actually change colors now ===============================================
    #     every_subject_country = {
    #         limit = {
    #             has_country_flag = subject_color_1
    #         }
    #         change_country_color = {
    #             # color = { 180 160 0 }
    #             color = { 0 0 0 }
    #         }
    #     }
    #     every_subject_country = {
    #         limit = {
    #             has_country_flag = subject_color_2
    #         }
    #         change_country_color = {
    #             color = { 255 255 255 }
    #         }
    #     } 
    #     every_subject_country = {
    #         limit = {
    #             has_country_flag = subject_color_3
    #         }
    #         change_country_color = {
    #             color = { 100 100 100 }
    #         }
    #     }
    # }

    
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = real_union_subject
                is_subject_of_type = administrative_region
            }
        }
        change_country_color = {
            color = { 230 10 20 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = appanage
            }
        }
        change_country_color = {
            color = { 235 20 30 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = vassal
            }
        }
        change_country_color = {
            color = { 255 80 100 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = fief_subject
            }
        }
        if = {
            limit = {
                has_country_flag = rasdom_fiefdom
            }
            change_country_color = {
                color = { 235 50 80 }
            }
        } else {
            change_country_color = {
                color = { 240 90 110 }
            }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = brother_kingdom
            }
        }
        change_country_color = {
            color = { 255 30 40 }
        }

    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = puppet_state
            }
        }
        change_country_color = {
            # color = { 130 0 0 }
            color = { 150 50 50 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = march
            }
        }
        change_country_color = {
            color = { 160 0 10 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = defensive_march
            }
        }
        change_country_color = {
            color = { 120 0 0 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = naval_march
            }
        }
        change_country_color = {
            color = { 170 0 90 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = native_reserve
            }
        }
        change_country_color = {
            color = { 255 150 170 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = integrated_tribe_subject
            }
        }
        change_country_color = {
            color = { 255 100 130 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = mining_corporation
            }
        }
        change_country_color = {
            color = { 255 100 50 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = trade_outpost
            }
        }
        change_country_color = {
            color = { 255 200 220 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = tropical_resort
            }
        }
        change_country_color = {
            color = { 230 100 20 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = dominion
                is_subject_of_type = dominion_tc
            }
        }
        change_country_color = {
            color = { 230 50 70 }
        }
    }
}

# ======================================================================================================================================================================================= #
###########################################################################################################################################################################################
# GENERAL SCRIPTS                                                                                                                                                                         #
###########################################################################################################################################################################################
# ======================================================================================================================================================================================= #

####################################################################################
# Subject Benefits / Subject Type Fixes  
####################################################################################

# TODO migrate these into mod
ROOT = {
    # Annex consequences
    ROOT = {
        remove_country_modifier = annexers_legacy
    }

    # Blocking all wars amongst subjects
    every_subject_country = {
        save_event_target_as = subject
        ROOT = {
            every_subject_country = {
                white_peace = event_target:subject 
                add_truce_with = event_target:subject 
            }
        }

        remove_opinion = {
            who = ROOT
            modifier = opinion_annex_vassal
        }
    }

    # Discover all subject lands
    every_subject_country = {
        every_owned_province = {
            discover_country = ROOT
        }
    }
    every_subject_country = {
        save_event_target_as = subject_country
        ROOT = {
            every_subject_country = {
                every_owned_province = {
                    discover_country = event_target:subject_country
                }
            }
            every_owned_province = {
                discover_country = event_target:subject_country
            }
        }
    }

    # Allow special vassal types
    set_country_flag = release_invalid_pirate_brotherhoods
    set_country_flag = release_invalid_native_reserves
    set_country_flag = releasing_invalid_banking_family_clan
    set_country_flag = releasing_invalid_sister_republics
    set_country_flag = releasing_invalid_pagan_chiefdoms
    set_country_flag = vassalizing_invalid_persian_satrapties

    # Fixing Subtribes and pagan chiefdoms to actally be hordes
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = mongolian_tribe
                is_subject_of_type = pagan_chiefdom
            }
        }
        change_government = tribal
        add_government_reform = steppe_horde
        # log = "[This.GetName] is a mongolian tribe"
    }

    # Force pirate brotherhoods to actually be pirate republics
    every_subject_country = {
        limit = {
            is_subject_of_type = pirate_brotherhood_vassal
            NOT = {
            has_reform = pirate_republic_reform
            }
        }
        change_government = republic
        add_government_reform = pirate_republic_reform
    }

    every_subject_country = {
        limit = {
            is_subject_of_type = trade_outpost
        }
        # Allows trade outposts to have many provinces
        set_country_flag = trade_outpost_annexed_province
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = banking_family_subject
                is_subject_of_type = sister_republic
            }
            NOT = {
                government = republic
            }
        }
        change_government = republic
    }

    every_subject_country = {
        limit = {
            is_subject_of_type = mining_corporation
        }
        add_country_modifier = {
            name = ultra_free_income_cheat
            duration = -1
        }
    }

    # Dominions should self colonize and get benefits
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = dominion
                is_subject_of_type = dominion_tc
                AND = {
                    is_subject_of_type = exarchate_subject
                    tag = K03
                }
            }
        }
        # log = "Country is [This.GetName]"
        add_treasury = 100000
        add_country_modifier = {
            name = ultra_free_income_cheat
            duration = -1
        }
        add_country_modifier = {
            name = colonize_the_continent
            duration = -1
        }
        add_country_modifier = { 
            name = spice_colony_modifier
            duration = -1  
        }
        add_country_modifier = { 
            name = cossack_settlers
            duration = -1  
        }
        add_country_modifier = { 
            name = sea_route_to_india
            duration = -1  
        }
        add_country_modifier = { 
            name = puritan_colonists
            duration = -1  
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = concentration_camp
                is_subject_of_type = revolution_subject
            }

        }
        # Constant massacres
        every_owned_province = {
            add_nationalism = -10
            add_devastation = 100
            add_local_autonomy = -1
            set_base_tax = 0
            set_base_production = 0
            set_base_manpower = 0
            add_base_tax = -1
            add_base_production = -1
            add_base_manpower = -1
            add_province_modifier = {
                name = hf_prov_massacre
                duration = -1
            }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = brother_kingdom
                is_subject_of_type = personal_union
                is_subject_of_type = se_integrated_personal_union
                is_subject_of_type = real_union_subject
                is_subject_of_type = administrative_region
            }
            NOT = {
                government = monarchy
            }
        }
        change_government = monarchy
    }

    # Naval march upgrades
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = naval_march
                is_subject_of_type = pirate_brotherhood_vassal
            }
        }
        capital_scope = {
            add_province_modifier = {
                name = per_naval_command_modifier
                duration = -1
            }
            add_province_modifier = {
                name = devils_gate_modifier
                duration = -1
            }
            add_province_modifier = {
                name = important_natural_harbor
                duration = -1
            }
            add_province_modifier = {
                name = trade_post_modifier
                duration = -1
            }
            add_province_modifier = {
                name = venice_galley_conscription
                duration = -1
            }
            add_province_modifier = {
                name = expansion_of_the_shipbuilding_industry
                duration = -1
            }
            add_province_modifier = {
                name = hsa_maritime_hegemon_modifier
                duration = -1
            }
            add_province_modifier = {
                name = tur_barbary_pirates
                duration = -1
            }
            add_province_modifier = {
                name = qng_presence_global_market_modifier
                duration = -1
            }
            add_province_modifier = {
                name = feo_lubeck
                duration = -1
            }
            add_province_modifier = {
                name = GER_wilhelmshaven_modifier
                duration = -1
            }
            add_province_modifier = {
                name = jason_mod_more_forcelimit
                duration = -1
            }
        }
    }

    # Every Subject Getting Free Income combined with no more vassal tax
    ROOT = {
        every_subject_country = {
            limit = {
                # NOT = {
                #     is_subject_of_type = vassal
                #     # is_subject_of_type = autonomous_vassal
                #     # is_subject_of_type = semi_autonomous_vassal
                #     # is_subject_of_type = non_autonomous_vassal
                #     is_subject_of_type = dominion
                #     is_subject_of_type = trade_outpost
                #     is_subject_of_type = appanage
                #     is_subject_of_type = fief_subject
                #     is_subject_of_type = eyalet
                #     is_subject_of_type = core_eyalet
                #     # is_subject_of_type = mandala_trade_vassal
                # }
                NOT = {
                    OR = {
                        # Concentration camps / slave states
                        is_subject_of_type = revolution_subject
                        is_subject_of_type = concentration_camp
                    }
                }
            }
            add_country_modifier = {
                name = free_income_cheat
                duration = -1
            }
        }

        # Ensuring 0% vassal income
        ROOT = {
            remove_country_modifier = si_scutage_unwilling_vassals
            remove_country_modifier = jason_vassal_income_minus_5_1
            remove_country_modifier = jason_vassal_income_minus_5_2
            remove_country_modifier = jason_vassal_income_minus_1_1
            remove_country_modifier = jason_vassal_income_minus_1_2
            remove_country_modifier = jason_vassal_income_minus_1_3
            remove_country_modifier = jason_vassal_income_minus_1_4

            if = {
                limit = {
                    government = monarchy
                }
                

                add_country_modifier = {
                    name = jason_vassal_income_minus_5_1
                    duration = -1
                }
                add_country_modifier = {
                    name = jason_vassal_income_minus_5_2
                    duration = -1
                }
                if = {
                    limit = {
                        legitimacy = 100
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_4
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_5
                        duration = -1
                    }
                }
                else_if = {
                    limit = {
                        legitimacy = 90
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_4
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_5
                }
                else_if = {
                    limit = {
                        legitimacy = 80
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                }
                else_if = {
                    limit = {
                        legitimacy = 70
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                }
                else_if = {
                    limit = {
                        legitimacy = 60
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 50
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_1
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 40
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_4
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 30
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 20
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 10
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else {
                    remove_country_modifier = jason_vassal_income_minus_5_2
                    remove_country_modifier = jason_vassal_income_minus_1_1
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                    remove_country_modifier = jason_vassal_income_minus_5_1
                }
            }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = pirate_brotherhood_vassal
            }
        }
        add_country_modifier = {
            name = hsa_maritime_hegemon_modifier
            duration = -1
        }
        every_owned_province = {
            add_province_modifier = {
                name = GER_wilhelmshaven_modifier
                duration = -1
            }
        }
    }

    # No autonomy
    every_subject_country = {
        remove_country_modifier = estate_burghers_guaranteed_autonomy_mod
        every_owned_province = {
            remove_province_modifier = estate_burghers_guaranteed_autonomy_mod
        }
    }
}

####################################################################################
# Fixing overlapping subject cores + removing foreign cores on root (+ claims)
####################################################################################

ROOT = {
    every_subject_country = {
        save_event_target_as = subject
        ROOT = {
            every_owned_province = {
                limit = {
                    OR = {
                        is_core = event_target:subject
                        is_claim = event_target:subject
                        is_permanent_claim = event_target:subject
                    }
                }
    
                log = "Removing Subject core/claim from [This.GetName]"
                remove_core = event_target:subject
                remove_claim = event_target:subject
            }
        }
        every_owned_province = {
            limit = {
                OR = {
                    is_core = ROOT
                    is_claim = ROOT
                    is_permanent_claim = ROOT
                }
            }
    
            log = "Removing Root core/claim from subject in [This.GetName]"
            remove_core = ROOT
            remove_claim = ROOT
        }
    }
}

####################################################################################
# Remove Maluses on Provinces | Smallpox, Left Trade Company, etc
####################################################################################

ROOT = {
    every_owned_province = {
        remove_province_modifier = inc_smallpox_outbreak
        remove_province_modifier = left_trade_company
    }
    every_subject_country = {
        every_owned_province = {
            remove_province_modifier = inc_smallpox_outbreak
            remove_province_modifier = left_trade_company
        }   
    }
}

####################################################################################
# Trade Company Investments And Conversions | tc.txt
####################################################################################

ROOT = {
    # Trade Company Investments
    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = townships
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = townships
        }
        owner = {
            add_treasury = -400
        }
    }

    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = brokers_exchange
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = brokers_exchange
        }
        owner = {
            add_treasury = -400
        }
    }


    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = company_depot
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = company_depot
        }
        owner = {
            add_treasury = -400
        }
    }

    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = district
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = district
        }
        owner = {
            add_treasury = -400
        }
    }


    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = military_administration
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = military_administration
        }
        owner = {
            add_treasury = -400
        }
    }

    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = permanent_quarters
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = permanent_quarters
        }
        owner = {
            add_treasury = -400
        }
    }
}

####################################################################################
# Enabling Estates
####################################################################################
if = {
    limit = {
        NOT = {
            OR = {
                tag = NHS
                tag = ELY
            }
        }
    }
    set_country_flag = enables_estate_burghers_flag
    set_country_flag = enables_estate_church_flag
}

####################################################################################
# Advisors | Creating Advisors Automatically
####################################################################################

ROOT = {
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = MIL
                    type = commandant
                }
            }
        }
        if = {
            limit = {
                current_income_balance = 200
            }
            add_treasury = -400
            hire_advisor = {
                type = commandant
                skill = 5
            }
        } else_if = {
            limit = {
                current_income_balance = 100
            }
            add_treasury = -200
            hire_advisor = {
                type = commandant
                skill = 3
            }
        } else = {
            add_treasury = -10
            hire_advisor = {
                type = commandant
                skill = 1
            }
        }
    }

    # TODO maybe this should be this run only
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = ADM
                    type = natural_scientist
                }
            }
        }
        if = {
            limit = {
                current_income_balance = 400
                # is_year = 1500 
            }
            add_treasury = -400
            hire_advisor = {
                type = natural_scientist
                skill = 5
            }
        } 
    }
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = DIP
                    type = trader
                }
            }
        }
        if = {
            limit = {
                current_income_balance = 400
                # is_year = 1500 
            }
            add_treasury = -400
            hire_advisor = {
                type = trader
                skill = 5
            }
        } 
    }
}

####################################################################################
# Total Conversion Mod Specific Changes
####################################################################################

# ===== Anbennar Specific ===============
# ROOT = {
#     # Liberate Command Vassals
#     # R62 = {
#     #     every_subject_country = {
#     #         grant_independence = yes
#     #     }
#     # }

#     # Loreseeker 
#     if = {
#         limit = {
#             ruler_studying_magic = yes
#             magic_legend_lore_cost_trigger = yes
#             NOT = { has_ruler_modifier = magic_loreseeker_cooldown }
#         }
#         magic_casted_spell = yes
#         magic_legend_lore_effect = yes
#         set_country_flag = divination_menu
#         hidden_effect = { country_event = { id = magic_ruler.9 } }
#         log = "Loreseeker available, casting now"
#     }

#     # Magic
#     ROOT = {
#         add_country_modifier = {
#             name = magic_estate_magnificent_feast_3
#             duration = -1
#         }

#         add_country_modifier = {
#             name = magic_realm_transmutation_plant_growth_4
#             duration = -1
#         }
    
#         # War Magic III
#         add_ruler_modifier = {
#             name = magic_realm_evocation_war_magic_3
#             duration = -1
#         }

#         # Charm III - Diplomats
#         add_ruler_modifier = {
#             name = magic_realm_enchantment_charm_impress_foreign_diplomats_3
#             duration = -1
#         }

#         # Charm III - Military
#         add_ruler_modifier = {
#             name = magic_realm_enchantment_charm_inspire_military_3
#             duration = -1
#         }

#         # Charm III - Subjects
#         add_ruler_modifier = {
#             name = magic_realm_enchantment_charm_assuage_subjects_3
#             duration = -1
#         }

#         # Foresight 
#         add_country_modifier = {
#             name = magic_realm_divination_foresight
#             duration = -1
#         }

#         # Magnificent Feast
#         add_country_modifier = {
#             name = magic_estate_magnificent_feast_3
#             duration = -1
#         }
#     }

#     # colonists
#     every_subject_country = {
#         add_treasury = 100000
#         change_government = monarchy
    
#         add_country_modifier = {
#             name = free_income_cheat
#             duration = -1
#         }
#         add_country_modifier = {
#             name = hierarchy_lots_of_colonists
#             duration = -1
#         }
#         add_country_modifier = {
#             name = jaddari_jadd_expedition_into_the_dark
#             duration = -1
#         }
#         remove_country_modifier = dont_colonize_but_migrate
#         change_government = monarchy
#     }

#     # Genocide
#     every_owned_province = {
#         # change_culture = ROOT
        
#         remove_province_modifier = orcish_minority_oppressed_small
#         remove_province_modifier = orcish_minority_oppressed_large

#         remove_province_modifier = orcish_minority_oppressed_small
#         remove_province_modifier = orcish_minority_oppressed_large

#         remove_province_modifier = hobgoblin_minority_oppressed_small
#         remove_province_modifier = hobgoblin_minority_oppressed_large

#         remove_province_modifier = goblin_minority_oppressed_small
#         remove_province_modifier = goblin_minority_oppressed_large

#         remove_province_modifier = troll_minority_oppressed_small
#         remove_province_modifier = troll_minority_oppressed_large

#         remove_province_modifier = harpy_minority_oppressed_small
#         remove_province_modifier = harpy_minority_oppressed_large

#         remove_province_modifier = ogre_minority_oppressed_small
#         remove_province_modifier = ogre_minority_oppressed_large

#         remove_province_modifier = orcish_minority_oppressed_small
#         remove_province_modifier = orcish_minority_oppressed_large


#         remove_province_modifier = orcish_majority_oppressed_small
#         remove_province_modifier = orcish_majority_oppressed_large

#         remove_province_modifier = elven_minority_oppressed_small
#         remove_province_modifier = elven_minority_oppressed_large
#     }

#     # Dwarven Road Speed
#     every_owned_province = {
#         limit = {
#             has_terrain = dwarven_road
#         }
#         remove_province_modifier = dwarovar_rail
#         add_permanent_province_modifier = { 
#             name = rocket_rail
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = Z36_surface_rail
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = G35_tromseloc_way
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = Z36_horse_rail
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = ravenmarch_swamp_road
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = G35_tromseloc_way
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = gelkalis_enchanted_bridges
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = A99_well_mantained_bridges
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = deranne_winebay_bastion
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = jaddari_rumours_of_the_jadd_among_the_fey
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = jaddari_the_golden_thread
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = rezankand_sunny_road
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = rezankand_leaf_path
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = barumand_celebrate_emergency_gate_modifier
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = malacnar_ynn
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = obrtrol_gerudian_coast_prosperity
#             duration = -1
#         }
#         add_permanent_province_modifier = { 
#             name = eord_jade_tunnel
#             duration = -1
#         }
#     }

#     # Explored
#     every_owned_province = {
#         set_province_flag = floor_explored
#     }

#     # hold setup 
#     every_owned_province = {
#         limit = {
#             OR = {
#                 has_terrain = dwarven_hold
#                 has_terrain = dwarven_hold_surface
#             }
#             # NOT = {
#             #     has_building = fort_15th
#             # }
#             NOT = {
#                 has_province_flag = hold_handled
#             }
#             ROOT = {
#                 treasury = 200
#             }
#         }

#         set_province_flag = hold_handled

#         add_province_modifier = {
#             name = province_trade_power_modifier_cheat
#             duration = -1
#         }
#         center_of_trade = 3
#         add_center_of_trade_level = 3

#         log = "Setting up hold in: [This.GetName]"
#         add_building = fort_15th
#         add_treasury = -200
#         add_province_modifier = {
#             name = local_autonomy_cheat
#             duration = -1
#         }
#         add_province_modifier = {
#             name = geo_narikala_no_leviathan
#             duration = -1
#         }
#         add_province_modifier = {
#             name = feo_defending_trebizond
#             duration = -1
#         }
#         add_province_modifier = {
#             name = hsn_rock_fortress
#             duration = -1
#         }
#         add_province_modifier = {
#             name = orm_bam_citadel
#             duration = -1
#         }
#         add_province_modifier = {
#             name = orm_fortifying_hormuz_island
#             duration = -1
#         }
#         add_province_modifier = {
#             name = estate_nobles_vegvar_system_modifier
#             duration = -1
#         }
#         change_religion = ROOT
#         change_culture = ROOT
#     }

#     # hold cot
#     # every_owned_province = {
#     #     limit = {
#     #         OR = {
#     #             has_terrain = dwarven_hold
#     #             has_terrain = dwarven_hold_surface
#     #         }
#     #     }
#     #     center_of_trade = 3
#     #     add_center_of_trade_level = 3
#     # }

#     # repair holds
#     every_owned_province = {
#         remove_province_modifier = ruined_hold
#         remove_province_modifier = damaged_hold
#     }

#     # subject colonists
#     every_subject_country = {
#         add_country_modifier = {
#             name = gawed_gawedi_settlers
#             duration = -1
#         }
#         add_country_modifier = {
#             name = nathalaire_resettlement_of_goblins
#             duration = -1
#         }
#         add_country_modifier = {
#             name = hierarchy_lots_of_colonists
#             duration = -1
#         }
#         add_country_modifier = {
#             name = jaddari_jadd_expedition_into_the_dark
#             duration = -1
#         }
#         remove_country_modifier = dont_colonize_but_migrate
#         change_government = monarchy
#     }

#     # Hold dev
#     ROOT = {
#         set_country_flag = all_holds_deved

#         every_subject_country = {
#             limit = {
#                 is_subject_of_type = amlharaz_hold
#             }
#             if = {
#                 limit = {
#                     NOT = {
#                         development = 70
#                     }
#                 }
#                 clr_country_flag = all_holds_deved
#             }
#         }

#         set_variable = {
#             which = myCountingVariable
#             value = 0
#         }
        
#         while = {
#             limit = {
#                 NOT = {
#                     has_country_flag = all_holds_deved
#                 }
#                 NOT = {
#                     check_variable = {
#                         which = myCountingVariable
#                         value = 20
#                     }
#                 }
#             }

#             log = "Hold Dev Iteration [myCountingVariable.GetValue]"
        
#             every_owned_province = {
#                 limit = {
#                     OR = {
#                         has_terrain = dwarven_hold
#                         has_terrain = dwarven_hold_surface
#                     }
#                     NOT = {
#                         development = 70
#                     }
#                 }
#                 add_base_tax = 1
#                 add_base_production = 2
#                 add_base_manpower = 1
#             }
        
#             change_variable = {
#                 which = myCountingVariable
#                 value = 1
#             }
#         }
#     }

#     change_variable = {
#         which = pointsWitchKing
#         value = -100
#     }
# }
# run_anbennar_prov = yes

# ===== Pax Solis Specific ==============
ROOT = {
    remove_country_modifier = hf_estate_int_cool_down_trade
    remove_country_modifier = hf_estate_int_cool_down_economy
    remove_country_modifier = hf_estate_int_cool_down_tax
    remove_country_modifier = hf_estate_int_cool_down_religion
    remove_country_modifier = hf_estate_int_cool_down_population
    # Intelligentsia
    add_estate_loyalty = {
        estate = estate_intelligentsia
        loyalty = 100
    }    
    add_estate_loyalty = {
        estate = estate_military_residence
        loyalty = 100
    }    
    
    CAPITAL_SCOPE = {
        if = {
            limit = {
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }

    if = {
        limit = {
            is_year = 1500
        }
        # log = "Adding University to all provinces"
        every_owned_province = {
            limit = { 
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }
    
    every_subject_country = {
        every_owned_province = {
            limit = { 
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }

    # Fixing stupid pax solis bug that causes chinese events to fire on non chinese tags
    every_owned_province = {
        add_country_modifier = {
            name = hf_jianbing_modifier
            duration = -1
        }
    }

    add_country_modifier = {
        name = hf_city_massacre
        duration = -1
    }


    # Pax Solis Auto Set Town Sizes
    every_owned_province = {
        limit = { 
            NOT = { development = 4 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_settlement
    }
    every_owned_province = {
        limit = { 
            development = 4
            NOT = { development = 6 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_village
    }
    every_owned_province = {
        limit = { 
            development = 6
            NOT = { development = 8 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_town
    }
    every_owned_province = {
        limit = { 
            development = 8
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_city
    }



    # Pax Solis Inflation
    add_country_modifier = { 
        name = strong_treasury
        duration = -1  
    }
    add_country_modifier = { 
        name = hol_strict_control
        duration = -1  
    }
    add_country_modifier = { 
        name = master_of_mint_boost
        duration = -1  
    }


    # buildings
    every_owned_province = {
        if = {
            limit = {
                NOT = {
                    has_building = roads
                }
            }
            add_building = roads
        }
        if = {
            limit = {
                NOT = {
                    has_building = stage_station
                }
            }
            add_building = stage_station
        }
    }

    every_subject_country = {
        every_owned_province = {
            if = {
                limit = {
                    NOT = {
                        has_building = roads
                    }
                }
                add_building = roads
            }
            if = {
                limit = {
                    NOT = {
                        has_building = stage_station
                    }
                }
                add_building = stage_station
            }
        }
    }


    # governor
    every_owned_province = {
        limit = {
            is_state = yes
            OR = {
                NOT = {
                    has_province_flag = hf_gov_estate_burghers
                }
                NOT = {
                    has_province_flag = hf_gov_estate_ruler
                }
            }
        }

        hf_remove_all_prov_ruler = yes
        set_province_flag = hf_gov_estate_burghers
        set_province_flag = hf_gov_estate_ruler
        add_province_modifier = {
            name = hf_gov_estate_burghers_modifier
            duration = -1
         
        }
    }
}
# run_pax_solis_prov = yes

# ===== Third Odyssey Specific ==============
# ROOT = {
#     # Para bellum mission modifier that grants fort maintenance cost reduction
#     every_owned_province = {
#         limit = {
#             OR = {
#                 province_id = 956
#                 province_id = 2553
#                 province_id = 952
#                 province_id = 937
#                 province_id = 953
#             }
#         }
#         add_building = fort_15th
#         add_province_modifier = {
#             name = pol_fortified_border_modifier
#             duration = -1
#         }
#     }
#     # Reset expand bureaucracy cost back to 50. This is for the administrative burden mechanic
#     set_variable = {
#         which = to_ab_expand_bureaucracy_cost
#         value = 50
#     }
#     CAPITAL_SCOPE = {
#         change_trade_goods = elysian_silk
#     }
#     if = {
#         limit = {
#             # tag = AAA
#         }
#         every_country = {
#             remove_country_modifier = nhs2_missionaries_cooldown_target
#         }
#         remove_country_modifier = nhs2_missionaries_cooldown
#     }
#     # Europeans stealing carribean colonies
#     every_province = {
#         limit = {
#             superregion = carribean_superregion
#             NOT = {
#                 OR = {
#                     owned_by = ROOT
#                     owned_by_subject_of = ROOT
#                 }
#             }
#             is_city = yes
#             is_empty = no
#         }
#         log = "Province [This.GetName] not owned by KYK"
#         cede_province = KYK
#     }
#     K01 = {
#         every_owned_province = {
#             limit = {
#                 NOT = {
#                     region = central_america_region
#                 }
#             }
#             cede_province = ROOT
#         }
#     }
#     KYK = {
#         every_owned_province = {
#             limit = {
#                 NOT = {
#                     OR = {
#                         superregion = carribean_superregion
#                     }
#                 }
#             }
#             log = "Kykladia has wrong province in [This.GetName], granting to Kauda"
#             cede_province = CM1
#         }
        
#         if = {
#             limit = {
#                 NOT = {
#                     num_of_colonies = 5
#                 }
#             }
#             random_province = {
#                 limit = {
#                     superregion = carribean_superregion
#                     is_empty = yes
#                 }
#                 log = "Creating KYK siberian frontier in: [This.GetName]"
#                 add_siberian_construction = 1
#                 # add_colonysize = -199
#                 cede_province = KYK
                
#             }
 
#         }
#     }

#     VIN = {
#         if = {
#             limit = {
#                 NOT = {
#                     num_of_colonies = 10
#                 }
#             }
#             random_province = {
#                 limit = {
#                     is_empty = yes
#                     is_neighbor_of = VIN
#                 }
#                 log = "Creating VIN siberian frontier in: [This.GetName]"
#                 add_siberian_construction = 1
#                 # add_colonysize = -199
#                 cede_province = VIN
                
#             }
#         }
#     }

#     # MSN = {
#     #     if = {
#     #         limit = {
#     #             NOT = {
#     #                 num_of_colonies = 5
#     #             }
#     #         }
#     #         random_province = {
#     #             limit = {
#     #                 is_empty = yes
#     #                 is_neighbor_of = MSN
#     #             }
#     #             log = "Creating MSN siberian frontier in: [This.GetName]"
#     #             add_siberian_construction = 1
#     #             # add_colonysize = -199
#     #             cede_province = MSN
                
#     #         }
#     #     }
#     # }

#     # Subjects colonizing
#     every_subject_country = {
#         if = {
#             limit = {
#                 NOT = {
#                     treasury = 100000
#                 }
#             }
#             add_treasury = 100000
#         }
#         add_country_modifier = {
#             name = free_income_cheat
#             duration = -1
#         }

#         change_government = monarchy

#         # More colonists
#         add_country_modifier = {
#             name = colonize_the_continent
#             duration = -1
#         }
#     }

#     # Removing Albanian Majority
#     every_owned_province = {
#         remove_province_modifier = nhs2_albanian_majority
#         remove_province_modifier = nhs2_albanian_majority2
#         remove_province_triggered_modifier = nhs2_albanian_majority_tm
#     }

#     # Vassalize imperial associates once 100 cities have been reached
#     if = {
#         limit = {
#             num_of_cities = 100
#         }
#         if = {
#             limit = {
#                 not = {
#                     MSN = {
#                         is_subject_of_type = nhs_imperial_associate
#                     }
#                 }
#             }
#             create_subject = {
#                 subject_type = nhs_imperial_associate
#                 subject = MSN
#             }
#         }

#         if = {
#             limit = {
#                 not = {
#                     VIN = {
#                         is_subject_of_type = nhs_imperial_associate
#                     }
#                 }
#             }
#             create_subject = {
#                 subject_type = nhs_imperial_associate
#                 subject = VIN
#             }
#         }
#     }

#     # Favorable Trade Locations
#     if = {
#         limit = {
#             num_of_cities = 100
#         }

#         every_province = {
#             limit = {
#                 OR = {
#                     owned_by = ROOT 
#                     owned_by_subject_of = ROOT
#                 }
#                 OR = {
#                     has_province_modifier = to_dynamic_cot
#                     has_active_triggered_province_modifier = to_dynamic_cot

#                     province_id = 1005
#                     province_id = 1007
#                     province_id = 2504
#                     province_id = 2507
#                     province_id = 2517
#                     province_id = 2526
#                     province_id = 2532
#                     province_id = 2538
#                     province_id = 2544
#                     province_id = 2546
#                     province_id = 2548
#                     province_id = 2557
#                     province_id = 2569
#                     province_id = 2570
#                     province_id = 2615
#                     province_id = 2633
#                     province_id = 2657
#                     province_id = 2660
#                     province_id = 2670
#                     province_id = 2803
#                     province_id = 2614
#                     province_id = 4587
#                     province_id = 4628
#                     province_id = 5365
#                     province_id = 4903
#                     province_id = 819
#                     province_id = 805
#                     province_id = 2888
#                     province_id = 2919
#                     province_id = 2857
#                     province_id = 2850
#                     province_id = 781
#                     province_id = 782
#                     province_id = 745
#                     province_id = 830
#                     province_id = 831
#                     province_id = 843
#                     province_id = 851
#                     province_id = 864
#                     province_id = 868
#                     province_id = 873
#                     province_id = 874
#                     province_id = 876
#                     province_id = 886
#                     province_id = 888
#                     province_id = 898
#                     province_id = 918
#                     province_id = 956
#                     province_id = 965
#                     province_id = 971
#                     province_id = 994
#                 }
#                 NOT = {
#                     province_has_center_of_trade_of_level = 1
#                 }
#                 is_city = yes
#             }
        
#             add_building = marketplace
#             log = "Adding marketplace to [This.GetName]"
#             if = {
#                 limit = {
#                     NOT = {
#                         base_tax = 6
#                     }
#                 }
#                 add_base_tax = 6
#             }
#             if = {
#                 limit = {
#                     NOT = {
#                         base_production = 8
#                     }
#                 }
#                 add_base_production = 8
#             }
#             if = {
#                 limit = {
#                     NOT = {
#                         base_manpower = 3
#                     }
#                 }
#                 add_base_manpower = 3
#             }
#         }
#     }

#     # Prevent Early European Colonization
#     if = {
#         limit = {
#             NOT = {
#                 is_year = 1510
#             }
#         }

#         every_country = {
#             limit = {
#                 CAPITAL_SCOPE = {
#                     continent = europe
#                 }
#             }
#             every_province = {
#                 limit = {
#                     has_discovered = PREV
#                     OR = {
#                         superregion = south_elysia_superregion
#                         superregion = central_elysia_superregion
#                         superregion = west_elysia_superregion
#                         superregion = north_elysia_superregion
#                         superregion = northeast_elysia_superregion
#                         superregion = southeast_elysia_superregion
#                         superregion = carribean_superregion
#                         superregion = east_american_sea_superregion
#                         superregion = south_elysia_superregion
#                     }
#                 }
#                 undiscover_country = Prev
#                 log = "Forcing European Country: [Prev.GetName] to undiscover province: [This.GetName]."

#                 if = {
#                     limit = {
#                         owned_by = PREV
#                     }
#                     decolonize = THIS
#                     log = "Forcing European Country: [Prev.GetName] to decolonize province: [This.GetName]."
#                 }
#             }
#         }
#     }
# }

add_treasury = 1