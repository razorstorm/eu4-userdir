####################################################################################
# Scripts | script.txt | Just general things to run
####################################################################################
log = "===============================Running Prov.txt=========================================="

# Some common triggers
# tag
# is_core
# province_id

remove_country_modifier = jason_global_own_trade_power_cheat_100
# Template for adding modifierS
add_country_modifier = {
    name = jason_mod_way_more_acc_cultures
    duration = -1
}

# every_owned_province = {
#     add_colonysize = 1000
# }

1195 = {
    change_trade_goods = cloves
}




####################################################################################
# Continuous things to run for this campaign + Global Flags
####################################################################################


# TODO migrate to mod
# every_subject_country = {
#     limit = {
#         is_subject_of_type = mining_corporation
#     }
#     every_owned_province = {
#         change_religion = owner
#         change_culture = owner
#     }
# }

every_subject_country = {
    add_country_modifier = {
        name = jason_mod_more_GC
        duration = -1
    }
}


ROOT = {
    every_country = {
        limit = {
            NOT = {
                tag = AKS
            }
            NOT = {
                is_subject_of = AKS
            }
        }
        add_ruler_personality = infertile_personality
        remove_country_modifier = sickly_monarch
        add_country_modifier = {
            name = very_sickly_monarch
            duration = -1
        }
        # add_country_modifier = {
        #     name = jason_global_foreign_trade_power_reduction_100000
        #     duration = -1
        # } 
        # add_country_modifier = {
        #     name = jason_global_own_trade_power_reduction_100000
        #     duration = -1
        # } 
    }

    remove_country_modifier = jason_global_foreign_trade_power_reduction_100000
    remove_country_modifier = jason_global_own_trade_power_reduction_100000

    every_subject_country = {
        remove_country_modifier = jason_global_foreign_trade_power_reduction_100000
        remove_country_modifier = jason_global_own_trade_power_reduction_100000
    }
}

every_subject_country = {
    limit = {
        is_subject_of_type = trade_outpost
    }
    capital_scope = {
        remove_province_modifier = province_trade_power_modifier_cheat_1m
        add_province_modifier = {
            name = province_trade_power_modifier_cheat_100k
            duration = -1
        }
    }
}


####################################################################################
# Colonization
####################################################################################

ROOT = {  
    set_variable = {
        which = colonyCounter
        value = 0
    }
    while = {
        limit = {
            NOT = {
                num_of_colonies = 25
            }
            NOT = {
                # TODO add early exit for when no more eligible provinces
                check_variable = {
                    which = colonyCounter
                    value = 50
                }
            }
        }
        change_variable = {
            which = colonyCounter
            value = 1
        }
        # log = "Loop iteration [colonyCounter.GetValue]"
        random_province = {
            limit = {
                OR = {
                    is_island = yes
                    has_port = yes
                    is_neighbor_of = ROOT
                }
                is_empty = yes
                has_discovered = ROOT
            }
            log = "Creating colony in: [This.GetName]"
            create_colony = 1
            # add_colonysize = -200
            discover_country = ROOT
        }
    }
}

####################################################################################
# Changing Colors and Names | color.txt | This should be edited EACH CAMPAIGN
####################################################################################

# Names
ROOT = {
    ROOT = {
        override_country_name = AKSUMITE_EMPIRE_NAME
    }

    # dominions
    C00 = {
        override_country_name = "Imperial Aksumite Cuba"
    }
    C10 = {
        override_country_name = "Imperial Aksumite East Coast"
    }
    K15 = {
        override_country_name = "Imperial Aksumite Chile"
    }
    K04 = {
        override_country_name = "Imperial Aksumite Capo Verde"
    }
    TEX = {
        override_country_name = "Imperial Aksumite Texas"
    }

    # Marches | X Dejazmach meaning militarized province
    BAL = {
        override_country_name = "Baluchistani Dejazmach"
    }
    TUN = {
        override_country_name = "Tunisian Dejazmach"
    }
    MLW = {
        override_country_name = "Malawian Dejazmach"
    }

    # Defensive Marches
    BEN = {
        override_country_name = "Fortress of Benin"
    }

    # Naval Marches
    CYP = {
        override_country_name = "Naval Base of Cyprus"
    }
    ORM = {
        override_country_name = "Gates of Hormuz"
    }
    SKA = {
        override_country_name = "Naval Base of Madagascar"
    }

    # Real Unions | Aksumite Negusate of X
    EGY = {
        override_country_name = "Aksumite Negusate of Egypt"
    }
    K08 = {
        override_country_name = "Aksumite Rasdom of Libya"
    }

    HSN = {
        override_country_name = "Aksumite Negusate of the Ayyubids"
    }
    KBO = {
        override_country_name = "Aksumite Empire of Kanem-Bornu"
    }
    
    # Princely Vassals
    # A select few Royal fiefs for powerful royal princes or close imperial relatives. These tend to be more powerful than nor royal fiefs. And they have more precedence, de jure power, and prestige than normal vassals. 
    # They also tend to be given more resources and the responsibility of either holding a large empire or overseeing important strategic operations or profitable industries (such as the mali mines)
    # Kingdoms: Prince-Negusate - Large | Appanage
    # Duchies: Prince-Mangesta - Medium or Small | Appanage
    K07 = {
        override_country_name = "Prince-Negusate of Mali"
    }
    # Appanages | Imperial Royal Fiefdoms: Imperial Prince-Appanage of X. Running counter to how they are defined, we use Appanages in a similar way as "The Prince of Wales". There should only be 1 appanage, which is always ruled by the designated imperial heir. This is meant to help with their training before ascension to the throne. During periods of no designated heir, the appanage is ruled by a royal regent appointed by the emperor, or simply temporarily ruled by the emperor directly as a personal union. 
    # Appanages have the most power, prestige, and precedence over all other subject states and are de jure the #1 ranked subject state with the most authority over the others. They are second only to th Empire itself, seeing as they are ruled directly by the Imperial Heir. 
    # Appanages tend to be vast wealthy empires to both help the young prince build up a strong powerbase to help him consolidate power after ascending the throne and also to provide the prince experience running vast empires and its endless headaches. 
    # Sometimes Appanages are also used as a "leader of other subjects" in a de jure hegemony (rather than a de jure subject liege relationship), to help delegate settling remote subject politics or to hone the Hier's diplomatic, problem solving, and conflict resolution skills. 
    KON = {
        override_country_name = "Imperial Prince-Appanage of Kongo"
    }
    
    # Fiefdoms | {fiefdom title} of X
    # Kingdoms: Negusates - Large | Brother Kingdom
    # Duchies: Rasdoms - Medium | Fief Subject
    # Counties: Awrajjas - Small | Fief Subject
    ROOT = {
        # Brother Kingdoms | Negusate of X, Negus Meaning Subject King, Negusate being a neologism for Kingdom
        POR = {
            override_country_name = "Kingdom of Portugal"
        }
        SON = {
            override_country_name = "Negusate of Songhai"
        }
        ALG = {
            override_country_name = "Negusate of Algeria"
        }
        MOR = {
            override_country_name = "Negusate of Morocco"
        }
        GUJ = {
            override_country_name = "Negusate of Gujarat"
        }
        # EUropean Subject Kingdoms can optionally take European style titles
        BAV = {
            override_country_name = "Kingdom of Bavaria`"
        }
        # Fief Subjects | Ras meaning Duke: Rasdom for duchies, Awrajja meaning province for counties. Large fiefdoms should be brother kingdoms: large Neusates
        ALH = {
            override_country_name = "Rasdom of Hajar"
            set_country_flag = rasdom_fiefdom
        }
        BRT = {
            override_country_name = "Rasdom of Buryat"
            set_country_flag = rasdom_fiefdom
        }
        QAR = {
            override_country_name = "Rasdom of Qara Qoyunlu"
            set_country_flag = rasdom_fiefdom
        }
        FRS = {
            override_country_name = "Rasdom of Fars"
            set_country_flag = rasdom_fiefdom
        }
        KRW = {
            override_country_name = "Rasdom of The Lake"
            set_country_flag = rasdom_fiefdom
        }
        BON = {
            override_country_name = "Rasdom of Bonoman"
            set_country_flag = rasdom_fiefdom
        }
        K10 = {
            override_country_name = "Rasdom of Andalusia"
            set_country_flag = rasdom_fiefdom
        }
        SND = {
            override_country_name = "Rasdom of Sindh"
            set_country_flag = rasdom_fiefdom
        }
        MUL = {
            override_country_name = "Rasdom of Multan"
            set_country_flag = rasdom_fiefdom
        }
        # Counties: Awrajja - Small
        YAO = {
            override_country_name = "Awrajja of Yao"
        }
        K12 = {
            override_country_name = "Awrajja of the Balearics"
        }
        TI1 = {
            override_country_name = "Awrajja of Khuttalan"
        }
        HM1 = {
            override_country_name = "Awrajja of Hamadan"
        }
        TAB = {
            override_country_name = "Awrajja of Mazandaran"
        }
        LR2 = {
            override_country_name = "Awrajja of Luristan"
        }
        ARD = {
            override_country_name = "Awrajja of Ardalan"
        }
        K02 = {
            override_country_name = "Awrajja of Basra"
        }
        KNG = {
            override_country_name = "Awrajja of Kong"
        }
        DGB = {
            override_country_name = "Awrajja of Dagbon"
        }
        GAL = {
            override_country_name = "Awrajja of Galicia"
        }
        KGR = {
            override_country_name = "Awrajja of Kangra"
        }
        # European Fiefs can optionally get European titles
        K11 = {
            override_country_name = "County of Sardinia"
        }
        PIO = {
            override_country_name = "County of Piombino"
        }
        SIC = {
            override_country_name = "County of Sicily"
        }
        SAV = {
            override_country_name = "County of Savoy"
        }
    }

    # Tropical Resorts 
    DGL = {
        override_country_name = "Resort of the Maldives"
    }
    K03 = {
        override_country_name = "Resort of the Mauritius"
    }
    BLI = {
        override_country_name = "Resort of Bali"
    }

    # Mining Corporations
    ZIM = {
        override_country_name = "Mines of the Great Zimbabwe"
    }
    K06 = {
        override_country_name = "Mines of the Wangara"
    }
    K18 = {
        override_country_name = "Mines of the Congo"
    }
    K14 = {
        override_country_name = "Mines of the Western Maghreb"
    }

    # Commercial Enterprises
    ZAN = {
        override_country_name = "Zanzibar Trade Company"
    }

    # Trade Outposts
    LFA = {
        override_country_name = "Lanfang Trade Outpost"
    }
    K01 = {
        override_country_name = "Sao Tome Trade Outpost"
    }
    GEN = {
        override_country_name = "Genoa Trade Outpost"
    }
    WUU = {
        override_country_name = "Wu Dynasty Trade Outpost"
    }
    PUN = {
        override_country_name = "Punjab Trade Outpost"
    }
    CEY = {
        override_country_name = "Ceylon Trade Outpost"
    }
    GOC = {
        override_country_name = "Golkanda Trade Outpost"
    }
    BOS = {
        override_country_name = "Bosnia Trade Outpost"
    }

    # Bankign Families
    FRI = {
        override_country_name = "Aksumite Bank of Frisia"
    }

    # Integrated Tribe Subjects | Shumate of X - Shum is a tribal chief
    AIR = {
        override_country_name = "Shumate of Saharan Tribes"
    }

    # Native Reserves | Native Tribes
    BNY = {
        override_country_name = "Bunyoro Tribal Reserve"
    }
    KET = {
        override_country_name = "Ketu Tribal Reserve"
    }
    KMC = {
        override_country_name = "Kamchadal Tribal Reserve"
    }
    CHU = {
        override_country_name = "Chukchi Tribal Reserve"
    }
    K05 = {
        override_country_name = "Arguin Tribal Reserve"
    }

    # Puppet States

    # Pirate Brotherhoods
    KNI = {
        override_country_name = "Knights of Malta"
    }
}

# Colors
ROOT = {
    # every_subject_country = {
    #   restore_country_color = yes
    # } 
    # restore_country_color = yes

    change_country_color = {
        color = { 230 10 20 }
    }

    # Cycling colors for Dominions
    # ROOT = {
    #     C02 = {
    #         clr_country_flag = subject_color_1
    #         clr_country_flag = subject_color_2
    #         clr_country_flag = subject_color_3

    #         set_country_flag = subject_color_1
    #     }
    #     C05 = {
    #         clr_country_flag = subject_color_1
    #         clr_country_flag = subject_color_2
    #         clr_country_flag = subject_color_3

    #         set_country_flag = subject_color_2
    #     }
    #     C04 = {
    #         clr_country_flag = subject_color_1
    #         clr_country_flag = subject_color_2
    #         clr_country_flag = subject_color_3

    #         set_country_flag = subject_color_3
    #     }

    #     every_subject_country = {
    #         limit = {
    #             OR = {
    #                 is_subject_of_type = dominion
    #                 is_subject_of_type = dominion_tc
    #             }
    #             NOT = {
    #                 OR = {
    #                     has_country_flag = subject_color_1
    #                     has_country_flag = subject_color_2
    #                     has_country_flag = subject_color_3
    #                 }
    #             }
    #         }
    #         random_list = {
    #             33 = {
    #                 set_country_flag = subject_color_1
    #                 log = "Setting subject_color_1 to [This.GetName]"
    #             }
    #             33 = {
    #                 set_country_flag = subject_color_2
    #                 log = "Setting subject_color_2 to [This.GetName]"
    #             }
    #             33 = {
    #                 set_country_flag = subject_color_3
    #                 log = "Setting subject_color_3 to [This.GetName]"
    #             }
    #         }
    #     }

    #     # ================== Finished setting flags, actually change colors now ===============================================
    #     every_subject_country = {
    #         limit = {
    #             has_country_flag = subject_color_1
    #         }
    #         change_country_color = {
    #             # color = { 180 160 0 }
    #             color = { 0 0 0 }
    #         }
    #     }
    #     every_subject_country = {
    #         limit = {
    #             has_country_flag = subject_color_2
    #         }
    #         change_country_color = {
    #             color = { 255 255 255 }
    #         }
    #     } 
    #     every_subject_country = {
    #         limit = {
    #             has_country_flag = subject_color_3
    #         }
    #         change_country_color = {
    #             color = { 100 100 100 }
    #         }
    #     }
    # }

    
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = real_union_subject
                is_subject_of_type = administrative_region
            }
        }
        change_country_color = {
            color = { 230 10 20 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = appanage
            }
        }
        change_country_color = {
            color = { 235 20 30 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = prince_vassal
            }
        }
        change_country_color = {
            color = { 235 30 40 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = vassal
            }
        }
        change_country_color = {
            color = { 255 80 100 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = fief_subject
            }
        }
        if = {
            limit = {
                has_country_flag = rasdom_fiefdom
            }
            change_country_color = {
                color = { 235 50 80 }
            }
        } else {
            change_country_color = {
                color = { 240 90 110 }
            }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = brother_kingdom
            }
        }
        change_country_color = {
            color = { 255 40 50 }
        }

    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = puppet_state
            }
        }
        change_country_color = {
            # color = { 130 0 0 }
            color = { 150 50 50 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = march
            }
        }
        change_country_color = {
            color = { 185 0 10 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = defensive_march
            }
        }
        change_country_color = {
            color = { 140 0 0 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = naval_march
            }
        }
        change_country_color = {
            color = { 170 0 90 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = native_reserve
            }
        }
        change_country_color = {
            color = { 255 150 170 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = integrated_tribe_subject
            }
        }
        change_country_color = {
            color = { 255 100 130 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = mining_corporation
            }
        }
        change_country_color = {
            color = { 255 100 50 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = trade_outpost
                is_subject_of_type = banking_family_subject
                is_subject_of_type = stato_da_mar_vassal
            }
        }
        change_country_color = {
            color = { 255 200 220 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = tropical_resort
            }
        }
        change_country_color = {
            color = { 230 100 20 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = dominion
                is_subject_of_type = dominion_tc
            }
        }
        change_country_color = {
            color = { 230 50 70 }
        }
    }
}

# ======================================================================================================================================================================================= #
###########################################################################################################################################################################################
# GENERAL SCRIPTS                                                                                                                                                                         #
###########################################################################################################################################################################################
# ======================================================================================================================================================================================= #

####################################################################################
# Subject Benefits / Subject Type Fixes  
####################################################################################

ROOT = {
    # These have been miograted into mod, todo test
    ROOT = {
        # Annex consequences
        ROOT = {
            remove_country_modifier = annexers_legacy
        }

        # Blocking all wars amongst subjects
        every_subject_country = {
            save_event_target_as = subject
            ROOT = {
                every_subject_country = {
                    white_peace = event_target:subject 
                    add_truce_with = event_target:subject 
                }
            }

        }
        every_subject_country = {
            remove_opinion = {
                who = ROOT
                modifier = opinion_annex_vassal
            }
        }

        # Discover all subject lands
        every_subject_country = {
            every_owned_province = {
                discover_country = ROOT
            }
        }
        every_subject_country = {
            save_event_target_as = subject_country
            ROOT = {
                every_subject_country = {
                    every_owned_province = {
                        discover_country = event_target:subject_country
                    }
                }
                every_owned_province = {
                    discover_country = event_target:subject_country
                }
            }
        }
    }

    # Allow special vassal types
    set_country_flag = release_invalid_pirate_brotherhoods
    set_country_flag = release_invalid_native_reserves
    set_country_flag = releasing_invalid_banking_family_clan
    set_country_flag = releasing_invalid_sister_republics
    set_country_flag = releasing_invalid_pagan_chiefdoms
    set_country_flag = vassalizing_invalid_persian_satrapties

    # Fixing Subtribes and pagan chiefdoms to actally be hordes
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = mongolian_tribe
                is_subject_of_type = pagan_chiefdom
            }
        }
        change_government = tribal
        add_government_reform = steppe_horde
        # log = "[This.GetName] is a mongolian tribe"
    }

    # Force pirate brotherhoods to actually be pirate republics
    every_subject_country = {
        limit = {
            is_subject_of_type = pirate_brotherhood_vassal
            NOT = {
            has_reform = pirate_republic_reform
            }
        }
        change_government = republic
        add_government_reform = pirate_republic_reform
    }

    every_subject_country = {
        limit = {
            is_subject_of_type = trade_outpost
        }
        # Allows trade outposts to have many provinces
        set_country_flag = trade_outpost_annexed_province
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = banking_family_subject
                is_subject_of_type = sister_republic
            }
            NOT = {
                government = republic
            }
        }
        change_government = republic
    }

    every_subject_country = {
        limit = {
            is_subject_of_type = mining_corporation
        }
        add_country_modifier = {
            name = ultra_free_income_cheat
            duration = -1
        }
    }

    # Dominions should self colonize and get benefits
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = dominion
                is_subject_of_type = dominion_tc
                AND = {
                    is_subject_of_type = exarchate_subject
                    tag = K03
                }
            }
        }
        # log = "Country is [This.GetName]"
        add_treasury = 100000
        add_country_modifier = {
            name = ultra_free_income_cheat
            duration = -1
        }
        add_country_modifier = {
            name = colonize_the_continent
            duration = -1
        }
        add_country_modifier = { 
            name = spice_colony_modifier
            duration = -1  
        }
        add_country_modifier = { 
            name = cossack_settlers
            duration = -1  
        }
        add_country_modifier = { 
            name = sea_route_to_india
            duration = -1  
        }
        add_country_modifier = { 
            name = puritan_colonists
            duration = -1  
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = concentration_camp
                is_subject_of_type = revolution_subject
            }

        }
        # Constant massacres
        every_owned_province = {
            add_nationalism = -10
            add_devastation = 100
            add_local_autonomy = -1
            set_base_tax = 0
            set_base_production = 0
            set_base_manpower = 0
            add_base_tax = -1
            add_base_production = -1
            add_base_manpower = -1
            add_province_modifier = {
                name = hf_prov_massacre
                duration = -1
            }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = brother_kingdom
                is_subject_of_type = personal_union
                is_subject_of_type = se_integrated_personal_union
                is_subject_of_type = real_union_subject
                is_subject_of_type = administrative_region
            }
            NOT = {
                government = monarchy
            }
        }
        change_government = monarchy
    }

    # Naval march upgrades
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = naval_march
                is_subject_of_type = pirate_brotherhood_vassal
            }
        }
        capital_scope = {
            add_province_modifier = {
                name = per_naval_command_modifier
                duration = -1
            }
            add_province_modifier = {
                name = devils_gate_modifier
                duration = -1
            }
            add_province_modifier = {
                name = important_natural_harbor
                duration = -1
            }
            add_province_modifier = {
                name = trade_post_modifier
                duration = -1
            }
            add_province_modifier = {
                name = venice_galley_conscription
                duration = -1
            }
            add_province_modifier = {
                name = expansion_of_the_shipbuilding_industry
                duration = -1
            }
            add_province_modifier = {
                name = hsa_maritime_hegemon_modifier
                duration = -1
            }
            add_province_modifier = {
                name = tur_barbary_pirates
                duration = -1
            }
            add_province_modifier = {
                name = qng_presence_global_market_modifier
                duration = -1
            }
            add_province_modifier = {
                name = feo_lubeck
                duration = -1
            }
            add_province_modifier = {
                name = GER_wilhelmshaven_modifier
                duration = -1
            }
            add_province_modifier = {
                name = jason_mod_more_forcelimit
                duration = -1
            }
        }
    }

    # Every Subject Getting Free Income combined with no more vassal tax
    ROOT = {
        every_subject_country = {
            limit = {
                # NOT = {
                #     is_subject_of_type = vassal
                #     # is_subject_of_type = autonomous_vassal
                #     # is_subject_of_type = semi_autonomous_vassal
                #     # is_subject_of_type = non_autonomous_vassal
                #     is_subject_of_type = dominion
                #     is_subject_of_type = trade_outpost
                #     is_subject_of_type = appanage
                #     is_subject_of_type = fief_subject
                #     is_subject_of_type = eyalet
                #     is_subject_of_type = core_eyalet
                #     # is_subject_of_type = mandala_trade_vassal
                # }
                NOT = {
                    OR = {
                        # Concentration camps / slave states
                        is_subject_of_type = revolution_subject
                        is_subject_of_type = concentration_camp
                    }
                }
            }
            add_country_modifier = {
                name = free_income_cheat
                duration = -1
            }
        }

        # Ensuring 0% vassal income
        ROOT = {
            remove_country_modifier = si_scutage_unwilling_vassals
            remove_country_modifier = jason_vassal_income_minus_5_1
            remove_country_modifier = jason_vassal_income_minus_5_2
            remove_country_modifier = jason_vassal_income_minus_1_1
            remove_country_modifier = jason_vassal_income_minus_1_2
            remove_country_modifier = jason_vassal_income_minus_1_3
            remove_country_modifier = jason_vassal_income_minus_1_4

            if = {
                limit = {
                    government = monarchy
                }
                

                add_country_modifier = {
                    name = jason_vassal_income_minus_5_1
                    duration = -1
                }
                add_country_modifier = {
                    name = jason_vassal_income_minus_5_2
                    duration = -1
                }
                if = {
                    limit = {
                        legitimacy = 100
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_4
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_5
                        duration = -1
                    }
                }
                else_if = {
                    limit = {
                        legitimacy = 90
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_4
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_5
                }
                else_if = {
                    limit = {
                        legitimacy = 80
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                }
                else_if = {
                    limit = {
                        legitimacy = 70
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                }
                else_if = {
                    limit = {
                        legitimacy = 60
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 50
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_1
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 40
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_4
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 30
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_3
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 20
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_2
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else_if = {
                    limit = {
                        legitimacy = 10
                    }
                    remove_country_modifier = jason_vassal_income_minus_5_2

                    add_country_modifier = {
                        name = jason_vassal_income_minus_1_1
                        duration = -1
                    }
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                } 
                else {
                    remove_country_modifier = jason_vassal_income_minus_5_2
                    remove_country_modifier = jason_vassal_income_minus_1_1
                    remove_country_modifier = jason_vassal_income_minus_1_2
                    remove_country_modifier = jason_vassal_income_minus_1_3
                    remove_country_modifier = jason_vassal_income_minus_1_4
                    remove_country_modifier = jason_vassal_income_minus_1_5
                    remove_country_modifier = jason_vassal_income_minus_5_1
                }
            }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = pirate_brotherhood_vassal
            }
        }
        add_country_modifier = {
            name = hsa_maritime_hegemon_modifier
            duration = -1
        }
        every_owned_province = {
            add_province_modifier = {
                name = GER_wilhelmshaven_modifier
                duration = -1
            }
        }
    }

    # No autonomy
    every_subject_country = {
        remove_country_modifier = estate_burghers_guaranteed_autonomy_mod
        every_owned_province = {
            remove_province_modifier = estate_burghers_guaranteed_autonomy_mod
        }
    }
}

####################################################################################
# Remove Maluses on Provinces | Smallpox, Left Trade Company, etc
####################################################################################

ROOT = {
    every_owned_province = {
        remove_province_modifier = inc_smallpox_outbreak
        remove_province_modifier = left_trade_company
    }
    every_subject_country = {
        every_owned_province = {
            remove_province_modifier = inc_smallpox_outbreak
            remove_province_modifier = left_trade_company
        }   
    }
}

####################################################################################
# Trade Company Investments And Conversions | tc.txt
####################################################################################

ROOT = {
    # Trade Company Investments
    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = townships
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = townships
        }
        owner = {
            add_treasury = -400
        }
    }

    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = brokers_exchange
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = brokers_exchange
        }
        owner = {
            add_treasury = -400
        }
    }


    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = company_depot
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = company_depot
        }
        owner = {
            add_treasury = -400
        }
    }

    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = district
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = district
        }
        owner = {
            add_treasury = -400
        }
    }


    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = military_administration
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = military_administration
        }
        owner = {
            add_treasury = -400
        }
    }

    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes 
            NOT = {
                has_trade_company_investment_in_area  = {
                    investment = permanent_quarters
                    investor = ROOT
                }
            }
            owner = {
                treasury = 400
            }
        }
        add_trade_company_investment = {
            investor = ROOT
            investment = permanent_quarters
        }
        owner = {
            add_treasury = -400
        }
    }
}

####################################################################################
# Advisors | Creating Advisors Automatically
####################################################################################

ROOT = {
    # Mil advisor migrated to mod
    # TODO maybe this should be this run only
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = ADM
                    type = natural_scientist
                }
            }
        }
        if = {
            limit = {
                current_income_balance = 400
                # is_year = 1500 
            }
            add_treasury = -400
            hire_advisor = {
                type = natural_scientist
                skill = 5
            }
        } 
    }
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = DIP
                    type = trader
                }
            }
        }
        if = {
            limit = {
                current_income_balance = 400
                # is_year = 1500 
            }
            add_treasury = -400
            hire_advisor = {
                type = trader
                skill = 5
            }
        } 
    }
}

####################################################################################
# Total Conversion Mod Specific Changes
####################################################################################

# ===== Anbennar Specific ===============
# run_periodic_anbennar_cheats = yes

# ===== Pax Solis Specific ==============
ROOT = {
    remove_country_modifier = hf_estate_int_cool_down_trade
    remove_country_modifier = hf_estate_int_cool_down_economy
    remove_country_modifier = hf_estate_int_cool_down_tax
    remove_country_modifier = hf_estate_int_cool_down_religion
    remove_country_modifier = hf_estate_int_cool_down_population
    # Intelligentsia
    add_estate_loyalty = {
        estate = estate_intelligentsia
        loyalty = 100
    }    
    add_estate_loyalty = {
        estate = estate_military_residence
        loyalty = 100
    }    
    
    CAPITAL_SCOPE = {
        if = {
            limit = {
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }

    if = {
        limit = {
            is_year = 1500
        }
        # log = "Adding University to all provinces"
        every_owned_province = {
            limit = { 
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }
    
    every_subject_country = {
        every_owned_province = {
            limit = { 
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }

    # Fixing stupid pax solis bug that causes chinese events to fire on non chinese tags
    every_owned_province = {
        add_country_modifier = {
            name = hf_jianbing_modifier
            duration = -1
        }
    }

    add_country_modifier = {
        name = hf_city_massacre
        duration = -1
    }


    # Pax Solis Auto Set Town Sizes
    every_owned_province = {
        limit = { 
            NOT = { development = 4 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_settlement
    }
    every_owned_province = {
        limit = { 
            development = 4
            NOT = { development = 6 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_village
    }
    every_owned_province = {
        limit = { 
            development = 6
            NOT = { development = 8 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_town
    }
    every_owned_province = {
        limit = { 
            development = 8
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_city
    }



    # Pax Solis Inflation
    add_country_modifier = { 
        name = strong_treasury
        duration = -1  
    }
    add_country_modifier = { 
        name = hol_strict_control
        duration = -1  
    }
    add_country_modifier = { 
        name = master_of_mint_boost
        duration = -1  
    }


    # buildings
    every_owned_province = {
        if = {
            limit = {
                NOT = {
                    has_building = roads
                }
            }
            add_building = roads
        }
        if = {
            limit = {
                NOT = {
                    has_building = stage_station
                }
            }
            add_building = stage_station
        }
    }

    every_subject_country = {
        every_owned_province = {
            if = {
                limit = {
                    NOT = {
                        has_building = roads
                    }
                }
                add_building = roads
            }
            if = {
                limit = {
                    NOT = {
                        has_building = stage_station
                    }
                }
                add_building = stage_station
            }
        }
    }


    # governor
    every_owned_province = {
        limit = {
            is_state = yes
            OR = {
                NOT = {
                    has_province_flag = hf_gov_estate_burghers
                }
                NOT = {
                    has_province_flag = hf_gov_estate_ruler
                }
            }
        }

        hf_remove_all_prov_ruler = yes
        set_province_flag = hf_gov_estate_burghers
        set_province_flag = hf_gov_estate_ruler
        add_province_modifier = {
            name = hf_gov_estate_burghers_modifier
            duration = -1
         
        }
    }
}
# run_pax_solis_prov = yes

# ===== Third Odyssey Specific ==============
# run_periodic_third_odyssey_cheats = yes

add_treasury = 1