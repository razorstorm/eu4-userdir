##########################################################################
# Scripts | script.txt | Just general things to run
##########################################################################



##########################################################################
# Colonization
##########################################################################
ROOT = {
    set_variable = {
        which = colonyCounter
        value = 0
    }
    while = {
        limit = {
            NOT = {
                num_of_colonies = 13
            }
            # NOT = {
            #     check_variable = {
            #         which = colonyCounter
            #         value = 5
            #     }
            # }
        }
        change_variable = {
            which = colonyCounter
            value = 1
        }
        log = "Loop iteration [colonyCounter.GetValue]"
        random_province = {
            limit = {
                OR = {
                    AND = {
                        OR = {
                            has_terrain = dwarven_hold
                            has_terrain = dwarven_hold_surface
                            has_terrain = dwarven_road
                        }
                        OR = {
                            superregion = west_serpentspine_superregion
                            superregion = east_serpentspine_superregion
                        }
                    }

                    OR = {
                        superregion = djinnakah_superregion
                    }
                }
                OR = {
                    # has_port = yes
                    is_neighbor_of = ROOT
                }
                is_empty = yes
                has_discovered = ROOT
            }
            log = "Creating colony in: [This.GetName]"
            create_colony = 1
        }
    }
}

##########################################################################
# Changing Colors | color.txt | This should be edited EACH CAMPAIGN
##########################################################################

ROOT = {
    # every_subject_country = {
    #   restore_country_color = yes
    # }

    change_country_color = {
        color = { 30  30  30 }
    }

    # Cycling colors for amlharaz holds
    ROOT = {
        set_country_flag = all_amlharaz_holds_flagged

        every_subject_country = {
            limit = {
                is_subject_of_type = amlharaz_hold
            }
            if = {
                limit = {
                    NOT = {
                        has_country_flag = amlharaz_hold_color_1
                        has_country_flag = amlharaz_hold_color_2
                        has_country_flag = amlharaz_hold_color_3
                    }
                }
                clr_country_flag = all_amlharaz_holds_flagged
            }
        }

        set_variable = {
            which = colorCounter
            value = 0
        }
        while = {
            limit = {
                NOT = {
                    has_country_flag = all_amlharaz_holds_flagged
                }
                NOT = {
                    check_variable = {
                        which = colorCounter
                        value = 30
                    }
                }
            }
            log = "Setting amlharaz hold color [colonyCounter.GetValue]"
            change_variable = {
                which = colorCounter
                value = 1
            }
            random_subject_country = {
                limit = {
                    OR = {
                        is_subject_of_type = amlharaz_hold
                    }
                    NOT = {
                        has_country_flag = amlharaz_hold_color_1
                        has_country_flag = amlharaz_hold_color_2
                        has_country_flag = amlharaz_hold_color_3
                    }
                }
                set_country_flag = amlharaz_hold_color_1
            }
            random_subject_country = {
                limit = {
                    OR = {
                        is_subject_of_type = amlharaz_hold
                    }
                    NOT = {
                        has_country_flag = amlharaz_hold_color_1
                        has_country_flag = amlharaz_hold_color_2
                        has_country_flag = amlharaz_hold_color_3
                    }
                }
                set_country_flag = amlharaz_hold_color_2
            }
            random_subject_country = {
                limit = {
                    OR = {
                        is_subject_of_type = amlharaz_hold
                    }
                    NOT = {
                        has_country_flag = amlharaz_hold_color_1
                        has_country_flag = amlharaz_hold_color_2
                        has_country_flag = amlharaz_hold_color_3
                    }
                }
                set_country_flag = amlharaz_hold_color_3
            }
        }


        # ================== Finished setting flags, actually change colors now ===============================================
        every_subject_country = {
            limit = {
                OR = {
                    is_subject_of_type = amlharaz_hold
                }
                has_country_flag = amlharaz_hold_color_1
            }
            change_country_color = {
                color = { 70  70  70 }
            }
        }
    
        
        every_subject_country = {
            limit = {
                OR = {
                    is_subject_of_type = amlharaz_hold
                }
                has_country_flag = amlharaz_hold_color_2
            }
            change_country_color = {
                color = { 100  100  100 }
            }
        }
        
        
        every_subject_country = {
            limit = {
                OR = {
                    is_subject_of_type = amlharaz_hold
                }
                has_country_flag = amlharaz_hold_color_3
            }
            change_country_color = {
                color = { 60 50 70 }
            }
        }

    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = crown_colony
                is_subject_of_type = dominion
            }
        }
        change_country_color = {
            color = { 120 120 120 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = march
            }
        }
        change_country_color = {
            color = { 110 30 30 }
        }
    }

    
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = native_reserve
            }
        }
        change_country_color = {
            color = { 150 150 150 }
        }
    }
}

##########################################################################
# Total Conversion Mod Specific Changes
##########################################################################

# ===== Anbennar Specific ===============
ROOT = {
    # Liberate Command Vassals
    # R62 = {
    #     every_subject_country = {
    #         grant_independence = yes
    #     }
    # }

    # Loreseeker 
    if = {
        limit = {
            ruler_studying_magic = yes
            magic_legend_lore_cost_trigger = yes
            NOT = { has_ruler_modifier = magic_loreseeker_cooldown }
        }
        magic_casted_spell = yes
        magic_legend_lore_effect = yes
        set_country_flag = divination_menu
        hidden_effect = { country_event = { id = magic_ruler.9 } }
        log = "Loreseeker available, casting now"
    }

    # Magic
    ROOT = {
        # War Magic III
        add_ruler_modifier = {
            name = magic_realm_evocation_war_magic_3
            duration = -1
        }

        # Charm III - Diplomats
        add_ruler_modifier = {
            name = magic_realm_enchantment_charm_impress_foreign_diplomats_3
            duration = -1
        }

        # Charm III - Military
        add_ruler_modifier = {
            name = magic_realm_enchantment_charm_inspire_military_3
            duration = -1
        }

        # Charm III - Subjects
        add_ruler_modifier = {
            name = magic_realm_enchantment_charm_assuage_subjects_3
            duration = -1
        }



        # Foresight 
        add_country_modifier = {
            name = magic_realm_divination_foresight
            duration = -1
        }

        # Magnificent Feast
        add_country_modifier = {
            name = magic_estate_magnificent_feast_3
            duration = -1
        }
    }

    # colonists
    every_subject_country = {
        add_treasury = 100000
        change_government = monarchy
    
        add_country_modifier = {
            name = free_income_cheat
            duration = -1
        }
        add_country_modifier = {
            name = hierarchy_lots_of_colonists
            duration = -1
        }
        add_country_modifier = {
            name = jaddari_jadd_expedition_into_the_dark
            duration = -1
        }
        remove_country_modifier = dont_colonize_but_migrate
        change_government = monarchy
    }

    # Genocide
    every_owned_province = {
        # change_culture = ROOT
        
        remove_province_modifier = orcish_minority_oppressed_small
        remove_province_modifier = orcish_minority_oppressed_large

        remove_province_modifier = orcish_minority_oppressed_small
        remove_province_modifier = orcish_minority_oppressed_large

        remove_province_modifier = hobgoblin_minority_oppressed_small
        remove_province_modifier = hobgoblin_minority_oppressed_large

        remove_province_modifier = goblin_minority_oppressed_small
        remove_province_modifier = goblin_minority_oppressed_large

        remove_province_modifier = troll_minority_oppressed_small
        remove_province_modifier = troll_minority_oppressed_large

        remove_province_modifier = harpy_minority_oppressed_small
        remove_province_modifier = harpy_minority_oppressed_large

        remove_province_modifier = ogre_minority_oppressed_small
        remove_province_modifier = ogre_minority_oppressed_large

        remove_province_modifier = orcish_minority_oppressed_small
        remove_province_modifier = orcish_minority_oppressed_large


        remove_province_modifier = orcish_majority_oppressed_small
        remove_province_modifier = orcish_majority_oppressed_large

        remove_province_modifier = elven_minority_oppressed_small
        remove_province_modifier = elven_minority_oppressed_large
    }

    # Dwarven Road Speed
    every_owned_province = {
        limit = {
            has_terrain = dwarven_road
        }
        remove_province_modifier = dwarovar_rail
        add_permanent_province_modifier = { 
            name = rocket_rail
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = Z36_surface_rail
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = G35_tromseloc_way
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = Z36_horse_rail
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = ravenmarch_swamp_road
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = G35_tromseloc_way
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = gelkalis_enchanted_bridges
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = A99_well_mantained_bridges
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = deranne_winebay_bastion
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = jaddari_rumours_of_the_jadd_among_the_fey
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = jaddari_the_golden_thread
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = rezankand_sunny_road
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = rezankand_leaf_path
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = barumand_celebrate_emergency_gate_modifier
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = malacnar_ynn
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = obrtrol_gerudian_coast_prosperity
            duration = -1
        }
        add_permanent_province_modifier = { 
            name = eord_jade_tunnel
            duration = -1
        }
    }

    # Explored
    every_owned_province = {
        set_province_flag = floor_explored
    }

    # hold setup 
    every_owned_province = {
        limit = {
            OR = {
                has_terrain = dwarven_hold
                has_terrain = dwarven_hold_surface
            }
            # NOT = {
            #     has_building = fort_15th
            # }
            NOT = {
                has_province_flag = hold_handled
            }
            ROOT = {
                treasury = 200
            }
        }

        set_province_flag = hold_handled

        add_province_modifier = {
            name = province_trade_power_modifier_cheat
            duration = -1
        }
        center_of_trade = 3
        add_center_of_trade_level = 3

        log = "Setting up hold in: [This.GetName]"
        add_building = fort_15th
        add_treasury = -200
        add_province_modifier = {
            name = local_autonomy_cheat
            duration = -1
        }
        add_province_modifier = {
            name = geo_narikala_no_leviathan
            duration = -1
        }
        add_province_modifier = {
            name = feo_defending_trebizond
            duration = -1
        }
        add_province_modifier = {
            name = hsn_rock_fortress
            duration = -1
        }
        add_province_modifier = {
            name = orm_bam_citadel
            duration = -1
        }
        add_province_modifier = {
            name = orm_fortifying_hormuz_island
            duration = -1
        }
        add_province_modifier = {
            name = estate_nobles_vegvar_system_modifier
            duration = -1
        }
    }

    # hold cot

    every_owned_province = {
        limit = {
            OR = {
                has_terrain = dwarven_hold
                has_terrain = dwarven_hold_surface
            }
        }
        center_of_trade = 3
        add_center_of_trade_level = 3
        change_religion = ROOT
        change_culture = ROOT
    }

    # repair holds

    every_owned_province = {
        remove_province_modifier = ruined_hold
        remove_province_modifier = damaged_hold
    }

    # subject colonists

    every_subject_country = {
        add_country_modifier = {
            name = gawed_gawedi_settlers
            duration = -1
        }
        add_country_modifier = {
            name = nathalaire_resettlement_of_goblins
            duration = -1
        }
        add_country_modifier = {
            name = hierarchy_lots_of_colonists
            duration = -1
        }
        add_country_modifier = {
            name = jaddari_jadd_expedition_into_the_dark
            duration = -1
        }
        remove_country_modifier = dont_colonize_but_migrate
        change_government = monarchy
    }

    # Hold dev
    ROOT = {
        set_country_flag = all_holds_deved

        every_subject_country = {
            limit = {
                is_subject_of_type = amlharaz_hold
            }
            if = {
                limit = {
                    NOT = {
                        development = 70
                    }
                }
                clr_country_flag = all_holds_deved
            }
        }

        set_variable = {
            which = myCountingVariable
            value = 0
        }
        
        while = {
            limit = {
                NOT = {
                    has_country_flag = all_holds_deved
                }
                NOT = {
                    check_variable = {
                        which = myCountingVariable
                        value = 20
                    }
                }
            }
        
            every_owned_province = {
                limit = {
                    OR = {
                        has_terrain = dwarven_hold
                        has_terrain = dwarven_hold_surface
                    }
                    NOT = {
                        development = 70
                    }
                }
                add_base_tax = 1
                add_base_production = 2
                add_base_manpower = 1
            }
        
            change_variable = {
                which = myCountingVariable
                value = 1
            }
        }
    }


    change_variable = {
        which = pointsWitchKing
        value = -100
    }

    # Magical spells
    ROOT = {
        add_country_modifier = {
            name = magic_estate_magnificent_feast_3
            duration = -1
        }

        add_country_modifier = {
            name = magic_realm_transmutation_plant_growth_4
            duration = -1
        }
    }
}

# ===== Pax Solis Specific ==============
# ROOT = {
#     CAPITAL_SCOPE = {
#         if = {
#             limit = {
#                 NOT = {
#                     has_building = university
#                 }
#             }
#             add_building = university
#         }
#     }

#     # Pax Solis Auto Set Town Sizes
#     every_owned_province = {
#         limit = { 
#             NOT = { development = 4 } 
#         }
        
#         clr_province_flag = hf_prov_settlement
#         clr_province_flag = hf_prov_village
#         clr_province_flag = hf_prov_town
#         clr_province_flag = hf_prov_city

#         set_province_flag = hf_prov_settlement
#     }
#     every_owned_province = {
#         limit = { 
#             development = 4
#             NOT = { development = 6 } 
#         }
        
#         clr_province_flag = hf_prov_settlement
#         clr_province_flag = hf_prov_village
#         clr_province_flag = hf_prov_town
#         clr_province_flag = hf_prov_city

#         set_province_flag = hf_prov_village
#     }
#     every_owned_province = {
#         limit = { 
#             development = 6
#             NOT = { development = 8 } 
#         }
        
#         clr_province_flag = hf_prov_settlement
#         clr_province_flag = hf_prov_village
#         clr_province_flag = hf_prov_town
#         clr_province_flag = hf_prov_city

#         set_province_flag = hf_prov_town
#     }
#     every_owned_province = {
#         limit = { 
#             development = 8
#         }
        
#         clr_province_flag = hf_prov_settlement
#         clr_province_flag = hf_prov_village
#         clr_province_flag = hf_prov_town
#         clr_province_flag = hf_prov_city

#         set_province_flag = hf_prov_city
#     }



#     # Pax Solis Inflation
#     add_country_modifier = { 
#         name = strong_treasury
#         duration = -1  
#     }
#     add_country_modifier = { 
#         name = hol_strict_control
#         duration = -1  
#     }


#     # buildings
#     every_owned_province = {
#         limit = {
#             NOT = {
#                 has_building = roads
#             }
#         }
#         add_building = roads
#     }
#     every_owned_province = {
#         limit = {
#             NOT = {
#                 has_building = stage_station
#             }
#         }
#         add_building = stage_station
#     }

#     every_subject_country = {
#         every_owned_province = {
#             limit = {
#                 NOT = {
#                     has_building = roads
#                 }
#             }
#             add_building = roads
#         }
#         every_owned_province = {
#             limit = {
#                 NOT = {
#                     has_building = stage_station
#                 }
#             }
#             add_building = stage_station
#         }
#     }


#     # governor
#     every_owned_province = {
#         limit = {
#             is_state = yes
#         }

#         hf_remove_all_prov_ruler = yes
#         area = {
#             limit = { owned_by = FROM }
#             set_province_flag = hf_gov_estate_burghers
#             set_province_flag = hf_gov_estate_ruler
#             add_province_modifier = {
#                 name = hf_gov_estate_burghers_modifier
#                 duration = -1
#             }
#         }
#         owner = {
#             add_estate_loyalty = {
#                 estate = estate_burghers
#                 loyalty = 1
#             }
#         }
#     }
# }

# ======================================================================================================================================================================================= #
###########################################################################################################################################################################################
# GENERAL SCRIPTS                                                                                                                                                                         #
###########################################################################################################################################################################################
# ======================================================================================================================================================================================= #

##########################################################################
# Subject Benefits / Subject Type Fixes  
##########################################################################

# Annex consequences
ROOT = {
    remove_country_modifier = annexed_subjects
    remove_country_modifier = annexers_legacy
}

# Allow special vassal types
set_country_flag = release_invalid_pirate_brotherhoods
set_country_flag = release_invalid_native_reserves
set_country_flag = releasing_invalid_banking_family_clan
set_country_flag = releasing_invalid_sister_republics


# Force pirate brotherhoods to actually be pirate republics
every_subject_country = {
    limit = {
        is_subject_of_type = pirate_brotherhood_vassal
        NOT = {
           has_reform = pirate_republic_reform
        }
    }
    change_government = republic
    add_government_reform = pirate_republic_reform
}


every_subject_country = {
    limit = {
        is_subject_of_type = trade_outpost
    }
    # Allows trade outposts to have many provinces
    set_country_flag = trade_outpost_annexed_province
}

every_subject_country = {
    limit = {
        OR = {
            is_subject_of_type = banking_family_subject
            is_subject_of_type = sister_republic
        }
        NOT = {
            government = republic
        }
    }
    change_government = republic
}

every_subject_country = {
    limit = {
        OR = {
            is_subject_of_type = brother_kingdom
            is_subject_of_type = personal_union
            is_subject_of_type = se_integrated_personal_union
            is_subject_of_type = real_union
            is_subject_of_type = administrative_region
        }
        NOT = {
            government = monarchy
        }
    }
    change_government = monarchy
}

every_subject_country = {
    limit = {
        NOT = {
            is_subject_of_type = vassal
            is_subject_of_type = autonomous_vassal
            is_subject_of_type = semi_autonomous_vassal
            is_subject_of_type = non_autonomous_vassal
            is_subject_of_type = dominion
            is_subject_of_type = trade_outpost
            is_subject_of_type = appanage
            is_subject_of_type = fief_subject
        }
    }
    add_country_modifier = {
        name = free_income_cheat
        duration = -1
    }
}


every_subject_country = {
    limit = {
        OR = {
            is_subject_of_type = pirate_brotherhood_vassal
        }
    }
    add_country_modifier = {
        name = hsa_maritime_hegemon_modifier
        duration = -1
    }
    every_owned_province = {
        add_province_modifier = {
            name = GER_wilhelmshaven_modifier
            duration = -1
        }
    }
}

# No autonomy
every_subject_country = {
    remove_country_modifier = estate_burghers_guaranteed_autonomy_mod
    every_owned_province = {
        remove_province_modifier = estate_burghers_guaranteed_autonomy_mod
    }
}


##########################################################################
# Subject Peace | subject_peace.txt 
##########################################################################


every_subject_country = {
    save_event_target_as = subject
    ROOT = {
        every_subject_country = {
            white_peace = event_target:subject 
            add_truce_with = event_target:subject 
        }
    }
}

# Subject annexation opinion
every_country = {
    remove_opinion = {
        who = ROOT
        modifier = opinion_annex_vassal
    }
}

##########################################################################
# Remove Smallpox for Inca
##########################################################################

every_province = {
    remove_province_modifier = inc_smallpox_outbreak
}

##########################################################################
# Remove Guaranteed Dhimmi Autonomy
##########################################################################

every_subject_country = {
    every_owned_province = {
        remove_province_modifier = estate_dhimmi_guaranteed_autonomy_mod
    }
}

every_owned_province = {
    remove_province_modifier = estate_church_lao_animism_mod
}
every_subject_country = {
    every_owned_province = {
        remove_province_modifier = estate_church_lao_animism_mod
    }
}


##########################################################################
# Make Immortal Royal Family
##########################################################################

if = {
    limit = {
        has_consort = no
    }

    define_consort = {
        culture = ROOT
        adm = 6
        dip = 6
        mil = 6
        female = yes
    }

    add_queen_personality = immortal_personality
}


if = {
    limit = {
        has_heir = no
    }

    define_heir = {
        culture = ROOT
        dynasty = ROOT
        claim = 100
        adm = 6
        dip = 6
        mil = 6
        female = no
    }

    add_heir_personality = immortal_personality
}

##########################################################################
# Reduce Gold Depletion Chance
##########################################################################

add_country_modifier = { 
    name = gold_depletion_cheat
    duration = -1  
}

every_subject_country = {
    add_country_modifier = { 
        name = gold_depletion_cheat
        duration = -1  
    }
}


##########################################################################
# Discover Vassal Lands
##########################################################################

every_subject_country = {
    every_owned_province = {
        discover_country = ROOT
    }
}

##########################################################################
# Golden Age
##########################################################################

extend_golden_age = 12 # 1 more year


##########################################################################
# Build Times
##########################################################################


every_subject_country = {
    add_country_modifier = { 
        name = jason_mod_lessTime
        duration = -1  
    }

    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }
}


##########################################################################
# Supply and Building Slots
##########################################################################


# For ROOT this is being added in cheats.txt

if = {
    limit = {
        NOT = {
            has_country_modifier = jason_global_more_building_slots
        }
    }
    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }
}

every_subject_country = {
    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }
}


##########################################################################
# Supply for Subjects | supply_limit.txt
##########################################################################

every_subject_country = {
    add_country_modifier = {
        name = supply_cheat_modifier
        duration = -1
    }
}


##########################################################################
# Center of Trade Upgrades | cot.txt
##########################################################################

every_owned_province = {
    limit = {
        province_has_center_of_trade_of_level = 1
        NOT = {
            province_has_center_of_trade_of_level = 2
        }
        ROOT = {
            treasury = 200
        }
    }
    add_center_of_trade_level = 1
    owner = {
        add_treasury = -200
    }
}

every_subject_country = {
    every_owned_province = {
        limit = {
            province_has_center_of_trade_of_level = 1
            NOT = {
                province_has_center_of_trade_of_level = 2
            }
            ROOT = {
                treasury = 200
            }
        }
        add_center_of_trade_level = 1
        ROOT = {
            add_treasury = -200
        }
    }
}



# CoT Upgrades and free prov trade power after X year
ROOT = {
    if = {
        limit = {
            is_year = 1600
        }
        every_owned_province = {
            limit = {
                province_has_center_of_trade_of_level = 1
            }
            add_province_modifier = {
                name = province_trade_power_modifier_cheat
                duration = -1
            }
        }
        every_subject_country = {
            every_owned_province = {
                limit = {
                    province_has_center_of_trade_of_level = 1
                }
                add_province_modifier = {
                    name = province_trade_power_modifier_cheat
                    duration = -1
                }
            }
        }
    }
    if = {
        limit = {
            is_year = 1500
        }

        every_owned_province = {
            limit = {
                province_has_center_of_trade_of_level = 2
                NOT = {
                    province_has_center_of_trade_of_level = 3
                }
                ROOT = {
                    treasury = 1000
                }
            }
            add_center_of_trade_level = 1
            ROOT = {
                add_treasury = -1000
            }
        }

        every_subject_country = {
            every_owned_province = {
                limit = {
                    province_has_center_of_trade_of_level = 2
                    NOT = {
                        province_has_center_of_trade_of_level = 3
                    }
                    ROOT = {
                        treasury = 1000
                    }
                }
                add_center_of_trade_level = 1
                ROOT = {
                    add_treasury = -1000
                }
            }
        }
    }
}



##########################################################################
# Trade Company Investments | tc.txt
##########################################################################

every_owned_province = {
    limit = {
        is_owned_by_trade_company = yes 
        NOT = {
            has_trade_company_investment_in_area  = {
                investment = townships
                investor = ROOT
            }
        }
        owner = {
            treasury = 400
        }
    }
    add_trade_company_investment = {
        investor = ROOT
        investment = townships
    }
    owner = {
        add_treasury = -400
    }
}

every_owned_province = {
    limit = {
        is_owned_by_trade_company = yes 
        NOT = {
            has_trade_company_investment_in_area  = {
                investment = brokers_exchange
                investor = ROOT
            }
        }
        owner = {
            treasury = 400
        }
    }
    add_trade_company_investment = {
        investor = ROOT
        investment = brokers_exchange
    }
    owner = {
        add_treasury = -400
    }
}


every_owned_province = {
    limit = {
        is_owned_by_trade_company = yes 
        NOT = {
            has_trade_company_investment_in_area  = {
                investment = company_depot
                investor = ROOT
            }
        }
        owner = {
            treasury = 400
        }
    }
    add_trade_company_investment = {
        investor = ROOT
        investment = company_depot
    }
    owner = {
        add_treasury = -400
    }
}





every_owned_province = {
    limit = {
        is_owned_by_trade_company = yes 
        NOT = {
            has_trade_company_investment_in_area  = {
                investment = district
                investor = ROOT
            }
        }
        owner = {
            treasury = 400
        }
    }
    add_trade_company_investment = {
        investor = ROOT
        investment = district
    }
    owner = {
        add_treasury = -400
    }
}



every_owned_province = {
    limit = {
        is_owned_by_trade_company = yes 
        NOT = {
            has_trade_company_investment_in_area  = {
                investment = military_administration
                investor = ROOT
            }
        }
        owner = {
            treasury = 400
        }
    }
    add_trade_company_investment = {
        investor = ROOT
        investment = military_administration
    }
    owner = {
        add_treasury = -400
    }
}



every_owned_province = {
    limit = {
        is_owned_by_trade_company = yes 
        NOT = {
            has_trade_company_investment_in_area  = {
                investment = permanent_quarters
                investor = ROOT
            }
        }
        owner = {
            treasury = 400
        }
    }
    add_trade_company_investment = {
        investor = ROOT
        investment = permanent_quarters
    }
    owner = {
        add_treasury = -400
    }
}


##########################################################################
# Convert Trade Company Provinces | convert_tc.txt
##########################################################################
every_owned_province = {
    limit = {
        is_owned_by_trade_company = yes
        owner = {
            # NOT = {
            #     num_of_janissaries = 1
            # }
            NOT = {
                religion = confucianism
            }
        }
    }
    change_religion = ROOT  
}

every_subject_country = {
    every_owned_province = {
        limit = {
            is_owned_by_trade_company = yes
        }
        change_religion = ROOT  
    }
}
add_treasury=1


##########################################################################
# Updating Subject Loyalties | sub.txt
##########################################################################

# every_subject_country = {
#     limit = {
#         NOT = { 
#             religion = ROOT
#         }
#     }
#     log = "non-compliant subject [This.GetName]"
# }

every_subject_country = {
    limit = {
        AND = {
            not = {    
                or = {
                    is_subject_of_type = muslim_tributary_vassal
                    is_subject_of_type = self_governing_colony
                    # religion = coptic
                    tag = ETH
                    religion = jewish
                }
            }
        }
        NOT = { 
            ROOT = {
                religion = nahuatl
            }
        }
    }
    change_religion = ROOT
}


every_subject_country = {
    ROOT = {
        create_marriage = PREV
    }
    add_legitimacy = 100
    add_devotion = 100
    add_horde_unity = 100
    set_meritocracy = 100
    add_republican_tradition = 100
    add_trust = {
        who = ROOT
        value = 100
        mutual = yes
    }
    # add_treasury = 100000
    set_dynasty = ROOT
    add_prestige = 100
    add_stability = 3
    # change_primary_culture = ROOT
    add_corruption = -100
    add_war_exhaustion = -100
    
    every_owned_province = {
        add_devastation = -100
    }

    add_estate_loyalty = {
        estate = estate_church
        loyalty = 100
    }
    add_estate_loyalty = {
        estate = estate_nobles
        loyalty = 100
    }
    add_estate_loyalty = {
        estate = estate_burghers
        loyalty = 100
    }
    add_estate_loyalty = {
        estate = estate_dhimmi
        loyalty = 100
    }
    add_estate_loyalty = {
        estate = estate_jains
        loyalty = 100
    }
}


every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = christian
        }
    }
    add_harmonized_religion = catholic
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = muslim
        }
    }
    add_harmonized_religion = sunni
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = mahayana
        }
    }
    add_harmonized_religion = mahayana
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = shinto
        }
    }
    add_harmonized_religion = shinto
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = vajrayana
        }
    }
    add_harmonized_religion = vajrayana
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = buddhism
        }
    }
    add_harmonized_religion = buddhism
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = dharmic
        }
    }
    add_harmonized_religion = hinduism
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = pagan
        }
    }
    add_harmonized_religion = animism
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = jewish_group
        }
    }
    add_harmonized_religion = jewish
}
every_subject_country = {
    limit = {
        NOT = {
            has_harmonized_with = zoroastrian_group
        }
    }
    add_harmonized_religion = zoroastrian
}


##########################################################################
# Adding Provinces to Parliament | parliament.txt
##########################################################################


add_country_modifier = { 
    name = bill_of_rights_parliament
    duration = -1  
    desc = master_of_southern_india:0
    hidden = no
}

add_country_modifier = { 
    name = gbr_pax_britannica
    duration = -1  
    desc = master_of_southern_india:0
    hidden = no
}

add_country_modifier = { 
    name = ave_pax_angevina
    duration = -1  
    desc = master_of_southern_india:0
    hidden = no
}

add_country_modifier = { 
    name = eng_the_two_houses
    duration = -1  
    desc = master_of_southern_india:0
    hidden = no
}

every_owned_province = {
    set_seat_in_parliament = yes
}

add_treasury = 1
