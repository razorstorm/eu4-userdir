log = "===============================Running Prov.txt=========================================="
####################################################################################
# Some Common Commands:
# 
# Triggers:
#
# * tag
# * is_core
# * province_id  
# 
# Effects:
# Template
JAN = {
    HOL = {
        change_tag_with_effects = {
            tag = NED
        }
    }
    culture_convert_all_provinces_of_given_culture = {
        culture = kurdish
    }
    convert_all_provinces_of_given_religion = {
        religion = catholic
    }

    remove_country_modifier = jason_mod_more_trade_steer_max

    # Template for adding modifierS
    add_mod = {
        name = mandate_cheat_100
    }
}

# TODO add diplomatic button to reset a country completely: Colors, names, grant independence, remove vassals, most common modifiers removed, etc

 
####################################################################################
####################################################################################
# Continuous things to run for this campaign + Global Flags
####################################################################################

ROOT = {
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = puppet_state
                is_subject_of_type = administrative_region
            }
        }
        log = "changing [This.GetName]"
        change_government = dictatorship
        add_government_reform = union_of_soviet_socialist_republics
    }

    every_owned_province = {
        limit = {
            is_primary_or_secondary_capital = yes
        }
        change_trade_goods = diamonds
        remove_building = furnace
        remove_building = blast_furnace
    }
}


####################################################################################
# Colonization
####################################################################################

ROOT = {
    set_variable = {
        which = colonyLimit
        value = 0
    }

    set_variable = {
        which = numColonies
        value = 0
    }

    # Get initial count of provinces. Then simply increment this variable whenever we add a colony and then use it for both loops below
    # Allows both lops to check against the same constant
    every_owned_province = {
        limit = {
            is_colony = yes
        }
        ROOT = {
            change_variable = {
                which = numColonies
                value = 1
            }
        }
    }
    log = "colonyLimit is [colonyLimit.GetValue], numColonies is [numColonies.GetValue]. Adding potential adjacent colonies."

    # Try adjacent ones first
    ROOT = {  
        set_variable = {
            which = colonyCounter
            value = 0
        }
        while = {
            limit = {
                # AKA !(numColonies >= colonyLimit)
                # AKA colonyLimit > numColonies
                # Don't iterate on the == case, since if numColonies already equals colonyLimit, we're done
                NOT = {
                    check_variable = {
                        which = numColonies       # Used in place of value, checks if the first <var> is equal or higher than the second <var> / <scope>'s value of <var>
                        which = colonyLimit
                    }
                }
                NOT = {
                    check_variable = {
                        which = colonyCounter
                        value = 20
                    }
                }
                # Early exit for when no more eligible provinces
                # Simply add an any_province with identical limit as the random_province from down below. Avoiding this to avoid having duplicated identical code.
            }
            change_variable = {
                which = colonyCounter
                value = 1
            }
            random_province = {
                limit = {
                    has_discovered = ROOT
                    is_empty = yes
                    # OR = {
                    #     continent = africa
                    #     continent = north_america
                    #     continent = south_america
                    #     continent = oceania
                    # }

                    is_neighbor_of = ROOT
                }
                log = "Creating adjacent colony in: [This.GetName] [This.prov_id.GetValue]"
                create_colony = 1
                ROOT = {
                    change_variable = {
                        which = numColonies
                        value = 1
                    }
                }
                discover_country = ROOT
            }
        }
    }

    log = "Done adding adjacents. colonyLimit is [colonyLimit.GetValue], numColonies is [numColonies.GetValue]. Adding potential non-adjacent colonies."

    ROOT = {  
        set_variable = {
            which = colonyCounter
            value = 0
        }
        while = {
            limit = {
                # AKA !(numColonies >= colonyLimit)
                # AKA colonyLimit > numColonies
                # Don't iterate on the == case, since if numColonies already equals colonyLimit, we're done
                NOT = {
                    check_variable = {
                        which = numColonies       # Used in place of value, checks if the first <var> is equal or higher than the second <var> / <scope>'s value of <var>
                        which = colonyLimit
                    }
                }
                NOT = {
                    # TODO add early exit for when no more eligible provinces
                    check_variable = {
                        which = colonyCounter
                        value = 10
                    }
                }
            }
            change_variable = {
                which = colonyCounter
                value = 1
            }
            # log = "Loop iteration [colonyCounter.GetValue]"
            random_province = {
                limit = {
                    has_discovered = ROOT
                    is_empty = yes
                    # OR = {
                    #     continent = africa
                    #     continent = north_america
                    #     continent = south_america
                    #     continent = oceania
                    # }
                    OR = {
                        is_island = yes
                        has_port = yes
                        is_neighbor_of = ROOT
                    }
                }
                log = "Creating potentially non-adjacent colony in: [This.GetName] [This.prov_id.GetValue]"
                create_colony = 1
                ROOT = {
                    change_variable = {
                        which = numColonies
                        value = 1
                    }
                }
                discover_country = ROOT
            }
        }
    }
}

####################################################################################
# Changing Colors and Names | color.txt | This should be edited EACH CAMPAIGN
####################################################################################

# Names
ROOT = {
    # Naming: Britain -> British
    # Naming: England -> English
    # Naming: United Kingdom -> British
    # Naming: British Empire -> Imperial British
    # Celestial is short for both Imperial Chinese and Imperial. So Celestial Chinese [Title], and Celestial [Title] mostly mean the sam ething, but the different wording may denote rank
    # Overall layering Home Lands > Vassals > Colonies > Tributaries
    # Overall layering levels: Core > Internal > External

    # Tiers of Integration
    
    # Layer A: De jure lands of the Empire
    # 1. British Core
    # 2. Core Regions (Admin region, real union subjects, imperial cities, etc)
    # 3. Special Administrative Regions + Direct Commanderies (Marches / Defensive Marches, Appanage, Princely Vassals)
    # 4. Delegated Semi-autonomous Regions aka Core Subjects (Resorts, Tusi, Native Reserves, tropical resorts, Mining Corporation)
    # 5. Core Colonies (Consolidated Dominions)
    
    # Layer B: De jure subjects of the Greater Realm
    # 6. Internal Vassals (Fiefdoms, Brother Kingdoms, Vassals, Commercial Enterprises, Agricultural Marches)
    # 7. Internal Colonies (Dominions)
    # 8. Internal Tributaries (Jimi States)
    
    # Layer C: De jure subjects of the Greater Hegemony
    # 9. External Vassals (Protectorates, Vassals, Trade Outposts, Puppet States, Pirate Brotherhoods, etc)
    # 10. External Colonies (Colonies)
    # 11. External Tributaries (Tributaries)
    # 12. Miscellaneous (Concentratoin Camps)

    
    #####################################################################################
    # Foreign Countries
    #####################################################################################

    SPA = {
        override_country_name = "Spanish Rump State"
    }

    #####################################################################################
    # Layer 1: Core:
    #####################################################################################

    ROOT = {
        if = {
            # limit = {
            #     or = {
            #         tag = RUS
            #     }
            # }
            # override_country_name = CELESTIAL_EMPIRE_TIAN_XIA
            override_country_name = USSR_NAME
            # override_country_name = "ASDF"
        }

        # set_country_flag = british_empire_flag
    }


    #####################################################################################
    # Layer 2: Core Regions (Admin region, real union subjects, imperial cities, etc):
    #####################################################################################

    ROOT = {
        # Administrative Regions | Qing Imperial Provinces of X
        # Viceroyalities (Empires) > Governorates (Kingdoms) > Prefectures (Duchies) > Provinces (Counties) > Districts (Baronies)
        ROOT = {
            # Viceroyalities (Empire Sized Regions) | Viceroyality of X or X_adj Viceroyalty
            PLC = {
                override_country_name = "Polish-Lithuanian S.F.S.R." # Soviet Federalist Socialist Republic
            }
            # Governorates (Kingdom Sized Regions) | Governorate of X
            LIV = {
                override_country_name = "Baltic S.S.R." # (Soviet Socialist Republic)
            }
            BOH = {
                override_country_name = "Bohemia S.S.R." # (Soviet Socialist Republic)
            }
            # Prefectures (Duchy Sized Regions) | X SSO (Soviet Socialist Oblast)
            SAX = {
                override_country_name = "Saxony S.S.O."
            }
            WAL = {
                override_country_name = "Walachia S.S.O."
            }
            # Provinces (County Sized Regions) | X SSP (Soviet Socialist Province)
            GEO = {
                override_country_name = "Georgia S.S.P."
            }

            # Districts (Barony Sized Regions) | X S.S.D (Soviet Socialist District)
            JAN = {
                override_country_name = "Shetland S.S.D."
            }
        }

        # Imperial Cities | Imperial City of X | imperial_city
        ROOT = {
            FEO = {
                override_country_name = "Theodoro Soviet Outpost"
            }
        }
        # HRE Free Cities | Free City of X | imperial_city
        ROOT = {
            JAN = {
                override_country_name = "Bremen Free City"
                set_country_flag = free_city
            }
        }

        # Banking Families | Imperial Qing X Bank
        ROOT = {
            JAN = {
                override_country_name = "The Hanseatic League"
            }
        }
        
        # Real Unions
        # Different than a fiefdom in that a real union is directly ruled by the monarch and his bureaucracy, rather than being indirectly ruled by a vassal king.
        ROOT = {
            JAN = {
                override_country_name = "United Belgian Kingdom"
            }
        }

        # Integrated Personal Unions
        # A bit less control than real unions
        ROOT = {
            JAN = {
                override_country_name = "Crown Kingdom of Lithuania"
            }
        }
    }

    #####################################################################################
    # Layer 3: Special Administrative Regions + Royal Family Demesnes: (Appanages and Princely Appanages) 
    #####################################################################################

    ROOT = {
        # Appanages 
        ROOT = {
            # IRE = {
            #     override_country_name = "Ireland Crown Appanage"
            # }
            JAN = {
                override_country_name = "Portugal Imperial Heir Appanage"
            }
        }
        
        # Princely Vassals (prince_vassal) or royal privileges
        ROOT = {
            JAN = {
                override_country_name = "Bosinia Princely Appanage"
            }
        }
    }
    
    #####################################################################################
    # Layer 4: Core Vassals (Tu-Si), Marches Resorts, Native Reserves, tropical resorts, Mining Corporation, Tibetain Ministries, etc): 
    #####################################################################################
    
    # Deeply entangled subject states that are really integral parts of the Empire proper, rather than semi-sovereign associated states. These are typically specialized governments or bureaus built for specialized purposes or for administrating special lands. These are considered de jure lands owned by the Empire proper. 
    ROOT = {
        # Native Reserves | X_adj Tribal Reserve
        ROOT = {
            JAN = {
                override_country_name = "Allada Native Reservation"
            }
            JAN = {
                override_country_name = "Chukchi Siberian Reservation"
                set_country_flag = siberian_reservation
            }
        }

        # These are basically marches for hordes, they are given mroe autonomy though, seeing as this a tier 4 not a tier 3 subject
        # Integrated Tribe Subjects | Great Horde of X | Essentially Horde Marches
        ROOT = {
            JAN = {
                override_country_name = "Zaporozhian Cossacks"
            }
            JAN = {
                override_country_name = "British Golden Horde"
                set_country_flag = imperial_horde
            }
        }

        # Pagan Chiefdom 
        ROOT = {
        }

        # Tropical Resorts | Name X Resort
        ROOT = {
            JAN = {
                override_country_name = "Croatian Resort Kingdom"
            }
        }

        
        # Mining Corporations | Mines of X
        ROOT = {
            JAN = {
                override_country_name = "Mali British Mining Co"
            }
        }

           
        # Marches | Commandery of X
        ROOT = {
            PRU = {
                override_country_name = "Prussia Soviet Commandery"
            }
            KOR = {
                override_country_name = "Korea Soviet Commandery"
            }
        }
        
        # Defensive Marches | Fortress of X
        ROOT = {
            CIR = {
                override_country_name = "Fortress of Circassia"
                # set_country_flag = wall_march
            }
        }
        
        # Naval Marches | Naval Base of X or Gates of X
        ROOT = {
            FRM = {
                override_country_name = "Taiwan Soviet Naval Commandery"
            }
        }

        # Religious Marches / Religious SARs
        ROOT = {
            JAN = {
                override_country_name = "Jerusalem Celestial Holy Kingdom"
            }
        }

        # Tibetan Ministries
        ROOT = {
            TIB = {
                override_country_name = "Tibet Soviet Socialist Ministry"
            }
        }

    }
    
    #####################################################################################
    # Layer 5: Core Colonies (`nions):
    #####################################################################################
    # Core Colonies are rare and typically only present when playing a new world nation. Colonial charters being granted to home regions to help speed up colonization would count as a consolidated dominion. When doing overseas colonization, the colony must be either an external or internal colony, not a core colony. 
    # Crown dominion, core dominion, and Dominate mostly mean the same thing. 

    # Consolidated Dominions | American Directorate of X
    ROOT = {
        JAN = {
            override_country_name = "Caribbean British Crown-Colony"
        }
    }

    ####################################################################################
    # Layer 6: Internal Vassals (Vassals, Trade Outposts, Fiefdoms, Commercial Enterprises):     
    #####################################################################################

    # Internal Vassals are typically subsidiary governments or organizations set up by the central regime and answerable directly to the throne. They are small localized governments for specialized purposes, not a true vassal state" perse
    ROOT = {
        # Trade Outposts | X Trade Outpost
        ROOT = {
            SND = {
                override_country_name = "Sindh Soviet Free Trade Outpost"
            }
        }

        # Client States
        ROOT = {
            JAN = {
                override_country_name = "Karelian Client Prefecture"
            }
        }

        # Generic Vassals (Waiting to be annexed)
        ROOT = {
            JAN = {
                override_country_name = "Test"
            }
        }

        # Trade Companies
        ROOT = {
            JAN = {
                override_country_name = "British East India Company"
            }
        }

        # Commercial Enterprises | X Commercial Enterprise
        ROOT = {
            JAN = {
                override_country_name = "British Dutch Trading Co"
            }
        }

        # Agricultural Marches | Agricultural March of X
        ROOT = {
            JAN = {
                override_country_name = "Walachia Romanian Wheat Fields"
            }
        }

        # Tu Si | X Tusi / X Siberian Tusi
        # Tu Si are smaller than fiefdoms, but are more centralized. They require centralized control and follow the laws of the central empire.
        # For non-chinese, they can be tiered
        # Tribal Kingdom
        # Tribal Duchy
        # Tribal County
        # Tribal Barony
        every_subject_country = {
            clr_country_flag = tribal_empire
            clr_country_flag = tribal_kingdom
            clr_country_flag = tribal_duchy
            clr_country_flag = tribal_county
            clr_country_flag = tribal_barony
        }
        ROOT = {
            # Tribal Empires | Tribal Empire of X
            JAN = {
                override_country_name = "Kanem Bornu Tribal Empire"
                set_country_flag = tribal_empire
            }
            JAN = {
                override_country_name = "Songhai Tribal Kingdom"
                set_country_flag = tribal_kingdom
            }
            # Tribal Duchy | Tribal Duchy of X
            JAN = {
                override_country_name = "Zamfara Tribal Duchy"
                set_country_flag = tribal_duchy
            }
            # Tribal County | X Tribal County
            JAN = {
                override_country_name = "Nupe Tribal County"
                set_country_flag = tribal_county
            }
            # Tribal Barony | X Tribal Barony
            JAN = {
                override_country_name = "Ketu Tribe"
                set_country_flag = tribal_barony
            }
        }

        ROOT = {
            # Brother Kingdoms 
            # Essentially identical to a Kingdom tier Fiefdom, except granted to friends of the Emperor or the dynasty. 
            # This grants them heightened social prestige and a bit more de facto autonomy, but is largely the same as a kingly fiefdom. A bit of a philosophical cross between a client Kingdom and a vassal Kingdom fiefdom. 
            # Functionally identical to a fief Kingdom.
            # Anglo instead of British to refer to an associated realm but not directly ruled by the monarch
            JAN = {
                override_country_name = "Anglo Kingdom of Bohemia"
            }
        }

        # Palatinates | Electorate fiefdoms. Slightly elevated above equally ranked fiefdoms in terms of precedence and prestige.
        ROOT = {
            JAN = {
                override_country_name = "Palatinate of the Rhine"
            }
        }

        every_subject_country = {
            limit = {
                is_subject_of_type = fief_subject
            }
            clr_country_flag = empire_fiefdom
            clr_country_flag = kingdom_fiefdom
            clr_country_flag = duchy_fiefdom
            clr_country_flag = county_fiefdom
            clr_country_flag = barony_fiefdom
        }
        # Fiefdoms | {fiefdom title} of X
        # Fiefdoms are a bit more autonomous than tusi and normal vassals. They are subservient to the laws of the central empire but fuedal lords have decent leeway to implement their own policies
        # Kingdoms: Kingdom of X - Large
        # Duchies: Duchy of X - Medium | Fief Subject (set_country_flag = duchy_fiefdom)
        # Counties: County of X - Small | Fief Subject
        # Baronies: Barony of X - OPMs | Fief Subject
        ROOT = {
            # Empire Tier
            JAN = {
                override_country_name = "Grand Republic of Novgorod"
                set_country_flag = empire_fiefdom
            }
            # Kingdom Tier - Archbishoprics, Kingdoms, Sultanates, Grand Duchies, Archduchies, Electorates, etc
            JAN = {
                override_country_name = "Kingdom of Yemen"
                set_country_flag = kingdom_fiefdom
            }
            # Duchies - Bishoprics, Duchies, Grand Emirates, Petty Kingdoms, etc
            JAN = {
                override_country_name = "Petty Kingdom of Nepal"
                set_country_flag = duchy_fiefdom
            }
            # Counties - Petty Bishoprics, Counties, Emirates, Duchies, Jarldoms, Earldoms, etc
            JAN = {
                override_country_name = "Tyrol County"
                set_country_flag = county_fiefdom
            }
            # Baronies - Parishes, Baronies, Towns, Holdings, Castles, Fortresses, Manors, etc (Heavily urbanized holdings should be Imperial Cities instead)
            JAN = {
                override_country_name = "Paderborn Barony"
                set_country_flag = barony_fiefdom
            }
        }
        
        # # Puppet States | American X_adj directorate / Puppet State of X / X_adj Satellite State
        # # Large - Grand Directorate
        # # Medium - Directorate
        # # Small - Satellite
        ROOT = {
            # Vanquished foes under direct military occupation
            # Intense de facto oppression, but with high amount of de jure autonomy compared to more core subject states
            TI3 = {
                override_country_name = "Kabul Soviet Satellite"
            }
            CND = {
                override_country_name = "Candar Soviet Satellite"
            }
            GEL = {
                override_country_name = "Gelre Soviet Satellite"
            }
            G2D = {
                override_country_name = "Guangdong Soviet Satellite"
            }
            MNG = {
                override_country_name = "People's Soviet Republic of China"
            }
        }

        # Semi Free Vassals 
        ROOT = {             
            JAN = {
                override_country_name = "Basque Free Country"
            }
        }

        # Free Vassals 
        ROOT = {             
            JAN = {
                override_country_name = "Catalonia Autonomous Region"
            }
        }
    }

    #####################################################################################
    # Layer 7: Internal Colonies (Dominions):
    #####################################################################################
    # Core tributaries make up the bulk of the Chinese Hegemony, they are heavily integrated Jimi states which not only pay tributes but are expected to organize together for mutual defense and wellfare. 

    ROOT = {
        JAN = {
            override_country_name = "British Colombia"
        }
    }

    ####################################################################################
    # Layer 8: Internal Tributaries (Jimi Tributary Vassals): 
    #####################################################################################
    
    ROOT = {
        JAN = {
            override_country_name = "Japanese Crown Tributary"
        }
    }

    ####################################################################################
    # Layer 9: External Vassals (Protectorates, Pirate Brotherhoods, Puppet States, etc etc):
    #####################################################################################

    ROOT = {
        # Protectorate | The X Protectorate
        ROOT = {
            BYZ = {
                override_country_name = "Soviet Eastern Roman Protectorate"
            }
        }
            
        
        # Pirate Brotherhoods
        ROOT = {
            KNI = {
                override_country_name = "Rhodes Soviet Spy Fleet"
            }
        }
        
        # # Puppet States | American X_adj directorate / Puppet State of X / X_adj Satellite State
        # # Large - Grand Directorate
        # # Medium - Directorate
        # # Small - Satellite
        ROOT = {
        }
    }

    #####################################################################################
    # Layer 10: External Colonies (Colonies)
    #####################################################################################
    # Colonies | Root Adj X
    ROOT = {   
        JAN = {
            override_country_name = "Norwegian Celestial Colony"
        }   
    }

    # Viking Settlements 
    ROOT = {
        JAN = {
            override_country_name = "Icelandic British Viking Kingdom"
        }
    }

    #####################################################################################
    # Layer 11: External Tributaries (Tributaries)
    #####################################################################################
    # Tributary Subjects | Even less integrated than Chinese Tributaries. Part of the greater Chinese Hegemony, not part of the Greater Chinese Empire proper
    ROOT = {

    }

    #####################################################################################
    # Layer 12: Miscellaneous
    #####################################################################################
    # Concentration camps
    ROOT = {
        JAN = {
            override_country_name = "Catholics Reeducation Camp"
        }
    }
}

# Colors
# Red
ROOT = {
    # every_subject_country = {
    #   restore_country_color = yes
    # } 
    # SOS = {
    #     restore_country_color = yes
    #     restore_country_name = yes
    # }
    change_country_color = {
        color = { 160 0 0 }
    }

    # Full provinces, and thus should have identical color as the overlord. These are core lands.
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = administrative_region
            }
        }
        change_country_color = {
            color = { 160 0 0 }
        }
    }

    # Very close to complete integration, thus very similar colors to overlord.
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = real_union_subject
            }
        }
        change_country_color = {
            color = { 170 10 10 }
        }
    }

    # Strong ties, but due to wanting to give the prince practice running a real country, a decent amount of autonomy is given, giving this country a slightly different color.
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = appanage
            }
        }
        change_country_color = {
            color = { 180 20 20 }
        }
    }

    # A less closely integrated union as a real union, but still much further along than a mere personal or dynastic union, and has gone far down the path of becoming one country. 
    # Not seen as a vassal of the Empire, but rather as a junior partner of the Empire itself. The lesser half of a unified overlord, rather than being a servant to a foreign overlord. 
    # But these tend to have less cultural unity with the metropole, and thus takes longer to integrate. 
    # This also tends to mean less influence than that of a Real Union. And are seen as more explicit junior partners, rather than two equal parts of a whole. 
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = se_integrated_personal_union
            }
        }
        change_country_color = {
            color = { 170 15 15 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = imperial_city
            }
        }
        if = {
            limit = {
                has_country_flag = township
            }
            change_country_color = {
                color = { 170 0 80 }
            }
        } else_if = {
            limit = {
                has_country_flag = free_city
            }
            change_country_color = {
                color = { 100 0 100 }
            }
        } else { 
            change_country_color = {
                color = { 130 0 80 }
            }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = concentration_camp
            }
        }
        change_country_color = {
            color = { 30 30 30 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = defensive_march
            }
        }
        change_country_color = {
            color = { 100 25 15 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = march
            }
        }
        if = {
            limit = {
                has_country_flag = imperial_march
            }
            change_country_color = {
                color = { 120 0 0 }
            }
        } else_if = {
            limit = {
                has_country_flag = regional_march
            }
            change_country_color = {
                color = { 150 5 5 }
            }
        } 
        else { 
            change_country_color = {
                color = { 130 5 5 }
            }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = integrated_tribe_subject
                is_subject_of_type = pagan_chiefdom
            }
        }
        if = {
            limit = {
                has_country_flag = imperial_horde
            }
            change_country_color = {
                color = { 140 15 0 }
            }
        } else {
            change_country_color = {
                color = { 130 10 0 }
            }
        }
    } 
    
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = palatinate_vassal
            }
        }
        change_country_color = {
            color = { 200 75 0 }
        }
    }  

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = fief_subject
            }
        }

        
        if = {
            limit = {
                has_country_flag = empire_fiefdom
            }
            change_country_color = {
                color = { 170 15 15 }
            }
        } 
        else_if = {
            limit = {
                has_country_flag = kingdom_fiefdom
            }
            change_country_color = {
                color = { 180 30 30 }
            }
        } 
        else_if = {
            limit = {
                has_country_flag = duchy_fiefdom
            }
            
            change_country_color = {
                color = { 200 50 50 }
            }
        } 
        else_if = {
            limit = {
                has_country_flag = vassal_fiefdom
            }
            change_country_color = {
                color = { 180 80 100 }
            }
        } 
        else_if = {
            limit = {
                has_country_flag = county_fiefdom
            }
            change_country_color = {
                color = { 250 75 75 }
            }
        }        
        else_if = {
            limit = {
                has_country_flag = barony_fiefdom
            }
            change_country_color = {
                color = { 255 120 120 }
            }
        }        
        else {
            change_country_color = {
                color = { 0 0 0 }
            }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = sino_jimi_state
            }
        }

        if = {
            limit = {
                has_country_flag = tribal_empire
            }
            change_country_color = {
                color = { 160 5 0 }
            }
        } 
        else_if = {
            limit = {
                has_country_flag = tribal_kingdom
            }
            change_country_color = {
                color = { 180 30 25 }
            }
        } 
        else_if = {
            limit = {
                has_country_flag = tribal_duchy
            }
            
            change_country_color = {
                color = { 210 50 35 }
            }
        } 
        else_if = {
            limit = {
                has_country_flag = tribal_county
            }
            change_country_color = {
                color = { 240 85 70 }
            }
        }        
        else_if = {
            limit = {
                has_country_flag = tribal_barony
            }
            change_country_color = {
                color = { 255 120 100 }
            }
        }        
        else {
            change_country_color = {
                color = { 0 0 0 }
            }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = prince_vassal
            }
        }
        change_country_color = {
            color = { 160 40 70 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = vassal
            }
        }
        change_country_color = {
            color = { 180 80 100 }
        }
    }


    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = semi_free_vassal
            }
        }
        change_country_color = {
            color = { 250 130 130 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = free_vassal
            }
        }
        change_country_color = {
            color = { 250 170 170 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = protectorate
            }
        }
        change_country_color = {
            color = { 255 185 185 }
        }
    }  

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = brother_kingdom
            }
        }
        change_country_color = {
            color = { 180 40 50 }
        }

    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = puppet_state
            }
        }
        change_country_color = {
            color = { 255 0 0 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = trade_outpost
            }
        }
        change_country_color = {
            # color = { 130 0 0 }
            color = { 255 100 60 }
        }
    }


    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = naval_march
            }
        }
        change_country_color = {
            color = { 130 0 90 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = religious_march
            }
        }
        change_country_color = {
            country = LIV
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = native_reserve
            }
        }
        if = {
            limit = {
                has_country_flag = siberian_reservation
            }
            change_country_color = {
                color = { 255 170 255 }
            }
        } else {
            change_country_color = {
                color = { 230 150 170 }
            }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = tb_minister_resident
            }
        }
        change_country_color = {
            color = { 230 180 200 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = viking_settlement
            }
        }
        change_country_color = {
            # color = { 0 0 0 } 
            color = { 200 180 250 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = integrated_tribe_subject
            }
        }
        change_country_color = {
            color = { 180 30 40 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = mining_corporation
            }
        }
        change_country_color = {
            color = { 255 100 0 } # GOLD!!!
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = commercial_enterprise
            }
        }
        change_country_color = {
            color = { 255 100 100 } # Pink
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = agricultural_march
            }
        }
        change_country_color = {
            color = { 220 130 50 } # WHEAT!!!
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = banking_family_subject
                is_subject_of_type = stato_da_mar_vassal
            }
        }
        change_country_color = {
            # color = { 0 0 0 } 
            color = { 255 160 160 }
        }
    }
    every_subject_country = {
        limit = {
            is_subject_of_type = pirate_brotherhood_vassal
        }
        change_country_color = {
            color = { 180 0 100 }
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = tropical_resort
            }
        }
        change_country_color = {
            color = { 250 80 20 } # Sun, Sand, Sea: Red, Orange, Yellow, BLue
        }
    }

    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = dominion
                is_subject_of_type = dominion_tc
            }
        }
        change_country_color = {
            color = { 220 50 50 }
        }
    }
    every_subject_country = {
        limit = {
            OR = {
                is_subject_of_type = consolidated_dominion
            }
        }
        change_country_color = {
            color = { 180 40 40 }
        }
    }
}

# ======================================================================================================================================================================================= #
###########################################################################################################################################################################################
# GENERAL SCRIPTS                                                                                                                                                                         #
###########################################################################################################################################################################################
# ======================================================================================================================================================================================= #

####################################################################################
# Subject Benefits / Subject Type Fixes  
####################################################################################

# TODO migrate
ROOT = {
    handle_subject_effects = yes

    # No autonomy
    every_subject_country = {
        remove_country_modifier = estate_burghers_guaranteed_autonomy_mod
        every_owned_province = {
            remove_province_modifier = estate_burghers_guaranteed_autonomy_mod
        }
    }
}

####################################################################################
# Remove Maluses on Provinces | Smallpox, Left Trade Company, etc
####################################################################################

ROOT = {
    every_owned_province = {
        remove_province_modifier = inc_smallpox_outbreak
        remove_province_modifier = left_trade_company
    }
    every_subject_country = {
        every_owned_province = {
            remove_province_modifier = inc_smallpox_outbreak
            remove_province_modifier = left_trade_company
        }   
    }
}

####################################################################################
# Advisors | Creating Advisors Automatically
####################################################################################

# TODO: Update mod such that on pre-advisor death, save advisor info to event variable, then on post death, create a clone of the advisor with the same stats
ROOT = {
    # Mil advisor migrated to mod
    # TODO maybe this should be this run only
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = ADM
                    type = natural_scientist
                }
            }
        }
        if = {
            limit = {
                current_income_balance = 400
                # is_year = 1500 
            }
            add_treasury = -400
            hire_advisor = {
                type = natural_scientist
                skill = 5
            }
        } 
    }
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = DIP
                    type = trader
                }
            }
        }
        if = {
            limit = {
                current_income_balance = 400
                # is_year = 1500 
            }
            add_treasury = -400
            hire_advisor = {
                type = trader
                skill = 5
            }
        } 
    }
}

####################################################################################
# Total Conversion Mod Specific Changes
####################################################################################

# ===== Anbennar Specific ===============
# run_periodic_anbennar_cheats = yes

# ===== Pax Solis Specific ==============
ROOT = {
    remove_country_modifier = hf_estate_int_cool_down_trade
    remove_country_modifier = hf_estate_int_cool_down_economy
    remove_country_modifier = hf_estate_int_cool_down_tax
    remove_country_modifier = hf_estate_int_cool_down_religion
    remove_country_modifier = hf_estate_int_cool_down_population
    # Intelligentsia
    add_estate_loyalty = {
        estate = estate_intelligentsia
        loyalty = 100
    }    
    add_estate_loyalty = {
        estate = estate_military_residence
        loyalty = 100
    }    
    
    6702 = {
        change_province_name = "Kamchatka Peninsula"
    }
    
    CAPITAL_SCOPE = {
        if = {
            limit = {
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }

    if = {
        limit = {
            is_year = 1500
        }
        # log = "Adding University to all provinces"
        every_owned_province = {
            limit = { 
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }
    
    every_subject_country = {
        every_owned_province = {
            limit = { 
                NOT = {
                    has_building = university
                }
            }
            add_building = university
        }
    }

    # Fixing stupid pax solis bug that causes chinese events to fire on non chinese tags
    every_owned_province = {
        add_province_modifier = {
            name = hf_jianbing_modifier
            duration = -1
        }
    }

    add_country_modifier = {
        name = hf_city_massacre
        duration = -1
    }


    # Pax Solis Auto Set Town Sizes
    every_owned_province = {
        limit = { 
            NOT = { development = 4 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_settlement
    }
    every_owned_province = {
        limit = { 
            development = 4
            NOT = { development = 6 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_village
    }
    every_owned_province = {
        limit = { 
            development = 6
            NOT = { development = 8 } 
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_town
    }
    every_owned_province = {
        limit = { 
            development = 8
        }
        
        clr_province_flag = hf_prov_settlement
        clr_province_flag = hf_prov_village
        clr_province_flag = hf_prov_town
        clr_province_flag = hf_prov_city

        set_province_flag = hf_prov_city
    }



    # Pax Solis Inflation
    add_country_modifier = { 
        name = strong_treasury
        duration = -1  
    }
    add_country_modifier = { 
        name = hol_strict_control
        duration = -1  
    }
    add_country_modifier = { 
        name = master_of_mint_boost
        duration = -1  
    }


    # buildings
    every_owned_province = {
        if = {
            limit = {
                NOT = {
                    has_building = roads
                }
            }
            add_building = roads
        }
        if = {
            limit = {
                NOT = {
                    has_building = stage_station
                }
            }
            add_building = stage_station
        }
    }

    every_subject_country = {
        every_owned_province = {
            if = {
                limit = {
                    NOT = {
                        has_building = roads
                    }
                }
                add_building = roads
            }
            if = {
                limit = {
                    NOT = {
                        has_building = stage_station
                    }
                }
                add_building = stage_station
            }
        }
    }


    # governor
    every_owned_province = {
        limit = {
            is_state = yes
            OR = {
                NOT = {
                    has_province_flag = hf_gov_estate_burghers
                }
                NOT = {
                    has_province_flag = hf_gov_estate_ruler
                }
            }
        }

        hf_remove_all_prov_ruler = yes
        set_province_flag = hf_gov_estate_burghers
        set_province_flag = hf_gov_estate_ruler
        add_province_modifier = {
            name = hf_gov_estate_burghers_modifier
            duration = -1
         
        }
    }
}

# ===== Third Odyssey Specific ==============
# run_periodic_third_odyssey_cheats = yes

add_treasury = 1